import * as _1 from "./rewards/v1/events";
import * as _2 from "./rewards/v1/genesis";
import * as _3 from "./rewards/v1/query";
import * as _4 from "./rewards/v1/rewards";
import * as _5 from "./rewards/v1/tx";
import * as _6 from "./tracking/v1/genesis";
import * as _7 from "./tracking/v1/query";
import * as _8 from "./tracking/v1/tracking";
import * as _18 from "./rewards/v1/query.rpc.Query";
import * as _19 from "./tracking/v1/query.rpc.Query";
import * as _20 from "./rewards/v1/tx.rpc.msg";
export declare namespace archway {
    namespace rewards {
        const v1: {
            MsgClientImpl: typeof _20.MsgClientImpl;
            QueryClientImpl: typeof _18.QueryClientImpl;
            createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                params(request?: _3.QueryParamsRequest): Promise<_3.QueryParamsResponse>;
                contractMetadata(request: _3.QueryContractMetadataRequest): Promise<_3.QueryContractMetadataResponse>;
                blockRewardsTracking(request?: _3.QueryBlockRewardsTrackingRequest): Promise<_3.QueryBlockRewardsTrackingResponse>;
                rewardsPool(request?: _3.QueryRewardsPoolRequest): Promise<_3.QueryRewardsPoolResponse>;
                estimateTxFees(request: _3.QueryEstimateTxFeesRequest): Promise<_3.QueryEstimateTxFeesResponse>;
                rewardsRecords(request: _3.QueryRewardsRecordsRequest): Promise<_3.QueryRewardsRecordsResponse>;
                outstandingRewards(request: _3.QueryOutstandingRewardsRequest): Promise<_3.QueryOutstandingRewardsResponse>;
                flatFee(request: _3.QueryFlatFeeRequest): Promise<_3.QueryFlatFeeResponse>;
            };
            registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
            load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
            MessageComposer: {
                encoded: {
                    setContractMetadata(value: _5.MsgSetContractMetadata): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    withdrawRewards(value: _5.MsgWithdrawRewards): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    setFlatFee(value: _5.MsgSetFlatFee): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    updateParams(value: _5.MsgUpdateParams): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                };
                withTypeUrl: {
                    setContractMetadata(value: _5.MsgSetContractMetadata): {
                        typeUrl: string;
                        value: _5.MsgSetContractMetadata;
                    };
                    withdrawRewards(value: _5.MsgWithdrawRewards): {
                        typeUrl: string;
                        value: _5.MsgWithdrawRewards;
                    };
                    setFlatFee(value: _5.MsgSetFlatFee): {
                        typeUrl: string;
                        value: _5.MsgSetFlatFee;
                    };
                    updateParams(value: _5.MsgUpdateParams): {
                        typeUrl: string;
                        value: _5.MsgUpdateParams;
                    };
                };
                toJSON: {
                    setContractMetadata(value: _5.MsgSetContractMetadata): {
                        typeUrl: string;
                        value: unknown;
                    };
                    withdrawRewards(value: _5.MsgWithdrawRewards): {
                        typeUrl: string;
                        value: unknown;
                    };
                    setFlatFee(value: _5.MsgSetFlatFee): {
                        typeUrl: string;
                        value: unknown;
                    };
                    updateParams(value: _5.MsgUpdateParams): {
                        typeUrl: string;
                        value: unknown;
                    };
                };
                fromJSON: {
                    setContractMetadata(value: any): {
                        typeUrl: string;
                        value: _5.MsgSetContractMetadata;
                    };
                    withdrawRewards(value: any): {
                        typeUrl: string;
                        value: _5.MsgWithdrawRewards;
                    };
                    setFlatFee(value: any): {
                        typeUrl: string;
                        value: _5.MsgSetFlatFee;
                    };
                    updateParams(value: any): {
                        typeUrl: string;
                        value: _5.MsgUpdateParams;
                    };
                };
                fromPartial: {
                    setContractMetadata(value: _5.MsgSetContractMetadata): {
                        typeUrl: string;
                        value: _5.MsgSetContractMetadata;
                    };
                    withdrawRewards(value: _5.MsgWithdrawRewards): {
                        typeUrl: string;
                        value: _5.MsgWithdrawRewards;
                    };
                    setFlatFee(value: _5.MsgSetFlatFee): {
                        typeUrl: string;
                        value: _5.MsgSetFlatFee;
                    };
                    updateParams(value: _5.MsgUpdateParams): {
                        typeUrl: string;
                        value: _5.MsgUpdateParams;
                    };
                };
            };
            AminoConverter: {
                "/archway.rewards.v1.MsgSetContractMetadata": {
                    aminoType: string;
                    toAmino: ({ senderAddress, metadata }: _5.MsgSetContractMetadata) => {
                        sender_address: string;
                        metadata: {
                            contract_address: string;
                            owner_address: string;
                            rewards_address: string;
                        };
                    };
                    fromAmino: ({ sender_address, metadata }: {
                        sender_address: string;
                        metadata: {
                            contract_address: string;
                            owner_address: string;
                            rewards_address: string;
                        };
                    }) => _5.MsgSetContractMetadata;
                };
                "/archway.rewards.v1.MsgWithdrawRewards": {
                    aminoType: string;
                    toAmino: ({ rewardsAddress, recordsLimit, recordIds }: _5.MsgWithdrawRewards) => {
                        rewards_address: string;
                        records_limit: {
                            limit: string;
                        };
                        record_ids: {
                            ids: string[];
                        };
                    };
                    fromAmino: ({ rewards_address, records_limit, record_ids }: {
                        rewards_address: string;
                        records_limit: {
                            limit: string;
                        };
                        record_ids: {
                            ids: string[];
                        };
                    }) => _5.MsgWithdrawRewards;
                };
                "/archway.rewards.v1.MsgSetFlatFee": {
                    aminoType: string;
                    toAmino: ({ senderAddress, contractAddress, flatFeeAmount }: _5.MsgSetFlatFee) => {
                        sender_address: string;
                        contract_address: string;
                        flat_fee_amount: {
                            denom: string;
                            amount: string;
                        };
                    };
                    fromAmino: ({ sender_address, contract_address, flat_fee_amount }: {
                        sender_address: string;
                        contract_address: string;
                        flat_fee_amount: {
                            denom: string;
                            amount: string;
                        };
                    }) => _5.MsgSetFlatFee;
                };
                "/archway.rewards.v1.MsgUpdateParams": {
                    aminoType: string;
                    toAmino: ({ authority, params }: _5.MsgUpdateParams) => {
                        authority: string;
                        params: {
                            inflation_rewards_ratio: string;
                            tx_fee_rebate_ratio: string;
                            max_withdraw_records: string;
                            min_price_of_gas: {
                                denom: string;
                                amount: string;
                            };
                        };
                    };
                    fromAmino: ({ authority, params }: {
                        authority: string;
                        params: {
                            inflation_rewards_ratio: string;
                            tx_fee_rebate_ratio: string;
                            max_withdraw_records: string;
                            min_price_of_gas: {
                                denom: string;
                                amount: string;
                            };
                        };
                    }) => _5.MsgUpdateParams;
                };
            };
            MsgSetContractMetadata: {
                encode(message: _5.MsgSetContractMetadata, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _5.MsgSetContractMetadata;
                fromJSON(object: any): _5.MsgSetContractMetadata;
                toJSON(message: _5.MsgSetContractMetadata): unknown;
                fromPartial(object: Partial<_5.MsgSetContractMetadata>): _5.MsgSetContractMetadata;
            };
            MsgSetContractMetadataResponse: {
                encode(_: _5.MsgSetContractMetadataResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _5.MsgSetContractMetadataResponse;
                fromJSON(_: any): _5.MsgSetContractMetadataResponse;
                toJSON(_: _5.MsgSetContractMetadataResponse): unknown;
                fromPartial(_: Partial<_5.MsgSetContractMetadataResponse>): _5.MsgSetContractMetadataResponse;
            };
            MsgWithdrawRewards: {
                encode(message: _5.MsgWithdrawRewards, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _5.MsgWithdrawRewards;
                fromJSON(object: any): _5.MsgWithdrawRewards;
                toJSON(message: _5.MsgWithdrawRewards): unknown;
                fromPartial(object: Partial<_5.MsgWithdrawRewards>): _5.MsgWithdrawRewards;
            };
            MsgWithdrawRewards_RecordsLimit: {
                encode(message: _5.MsgWithdrawRewards_RecordsLimit, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _5.MsgWithdrawRewards_RecordsLimit;
                fromJSON(object: any): _5.MsgWithdrawRewards_RecordsLimit;
                toJSON(message: _5.MsgWithdrawRewards_RecordsLimit): unknown;
                fromPartial(object: Partial<_5.MsgWithdrawRewards_RecordsLimit>): _5.MsgWithdrawRewards_RecordsLimit;
            };
            MsgWithdrawRewards_RecordIDs: {
                encode(message: _5.MsgWithdrawRewards_RecordIDs, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _5.MsgWithdrawRewards_RecordIDs;
                fromJSON(object: any): _5.MsgWithdrawRewards_RecordIDs;
                toJSON(message: _5.MsgWithdrawRewards_RecordIDs): unknown;
                fromPartial(object: Partial<_5.MsgWithdrawRewards_RecordIDs>): _5.MsgWithdrawRewards_RecordIDs;
            };
            MsgWithdrawRewardsResponse: {
                encode(message: _5.MsgWithdrawRewardsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _5.MsgWithdrawRewardsResponse;
                fromJSON(object: any): _5.MsgWithdrawRewardsResponse;
                toJSON(message: _5.MsgWithdrawRewardsResponse): unknown;
                fromPartial(object: Partial<_5.MsgWithdrawRewardsResponse>): _5.MsgWithdrawRewardsResponse;
            };
            MsgSetFlatFee: {
                encode(message: _5.MsgSetFlatFee, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _5.MsgSetFlatFee;
                fromJSON(object: any): _5.MsgSetFlatFee;
                toJSON(message: _5.MsgSetFlatFee): unknown;
                fromPartial(object: Partial<_5.MsgSetFlatFee>): _5.MsgSetFlatFee;
            };
            MsgSetFlatFeeResponse: {
                encode(_: _5.MsgSetFlatFeeResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _5.MsgSetFlatFeeResponse;
                fromJSON(_: any): _5.MsgSetFlatFeeResponse;
                toJSON(_: _5.MsgSetFlatFeeResponse): unknown;
                fromPartial(_: Partial<_5.MsgSetFlatFeeResponse>): _5.MsgSetFlatFeeResponse;
            };
            MsgUpdateParams: {
                encode(message: _5.MsgUpdateParams, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _5.MsgUpdateParams;
                fromJSON(object: any): _5.MsgUpdateParams;
                toJSON(message: _5.MsgUpdateParams): unknown;
                fromPartial(object: Partial<_5.MsgUpdateParams>): _5.MsgUpdateParams;
            };
            MsgUpdateParamsResponse: {
                encode(_: _5.MsgUpdateParamsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _5.MsgUpdateParamsResponse;
                fromJSON(_: any): _5.MsgUpdateParamsResponse;
                toJSON(_: _5.MsgUpdateParamsResponse): unknown;
                fromPartial(_: Partial<_5.MsgUpdateParamsResponse>): _5.MsgUpdateParamsResponse;
            };
            Params: {
                encode(message: _4.Params, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _4.Params;
                fromJSON(object: any): _4.Params;
                toJSON(message: _4.Params): unknown;
                fromPartial(object: Partial<_4.Params>): _4.Params;
            };
            ContractMetadata: {
                encode(message: _4.ContractMetadata, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _4.ContractMetadata;
                fromJSON(object: any): _4.ContractMetadata;
                toJSON(message: _4.ContractMetadata): unknown;
                fromPartial(object: Partial<_4.ContractMetadata>): _4.ContractMetadata;
            };
            BlockRewards: {
                encode(message: _4.BlockRewards, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _4.BlockRewards;
                fromJSON(object: any): _4.BlockRewards;
                toJSON(message: _4.BlockRewards): unknown;
                fromPartial(object: Partial<_4.BlockRewards>): _4.BlockRewards;
            };
            TxRewards: {
                encode(message: _4.TxRewards, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _4.TxRewards;
                fromJSON(object: any): _4.TxRewards;
                toJSON(message: _4.TxRewards): unknown;
                fromPartial(object: Partial<_4.TxRewards>): _4.TxRewards;
            };
            RewardsRecord: {
                encode(message: _4.RewardsRecord, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _4.RewardsRecord;
                fromJSON(object: any): _4.RewardsRecord;
                toJSON(message: _4.RewardsRecord): unknown;
                fromPartial(object: Partial<_4.RewardsRecord>): _4.RewardsRecord;
            };
            FlatFee: {
                encode(message: _4.FlatFee, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _4.FlatFee;
                fromJSON(object: any): _4.FlatFee;
                toJSON(message: _4.FlatFee): unknown;
                fromPartial(object: Partial<_4.FlatFee>): _4.FlatFee;
            };
            QueryParamsRequest: {
                encode(_: _3.QueryParamsRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _3.QueryParamsRequest;
                fromJSON(_: any): _3.QueryParamsRequest;
                toJSON(_: _3.QueryParamsRequest): unknown;
                fromPartial(_: Partial<_3.QueryParamsRequest>): _3.QueryParamsRequest;
            };
            QueryParamsResponse: {
                encode(message: _3.QueryParamsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _3.QueryParamsResponse;
                fromJSON(object: any): _3.QueryParamsResponse;
                toJSON(message: _3.QueryParamsResponse): unknown;
                fromPartial(object: Partial<_3.QueryParamsResponse>): _3.QueryParamsResponse;
            };
            QueryContractMetadataRequest: {
                encode(message: _3.QueryContractMetadataRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _3.QueryContractMetadataRequest;
                fromJSON(object: any): _3.QueryContractMetadataRequest;
                toJSON(message: _3.QueryContractMetadataRequest): unknown;
                fromPartial(object: Partial<_3.QueryContractMetadataRequest>): _3.QueryContractMetadataRequest;
            };
            QueryContractMetadataResponse: {
                encode(message: _3.QueryContractMetadataResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _3.QueryContractMetadataResponse;
                fromJSON(object: any): _3.QueryContractMetadataResponse;
                toJSON(message: _3.QueryContractMetadataResponse): unknown;
                fromPartial(object: Partial<_3.QueryContractMetadataResponse>): _3.QueryContractMetadataResponse;
            };
            QueryBlockRewardsTrackingRequest: {
                encode(_: _3.QueryBlockRewardsTrackingRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _3.QueryBlockRewardsTrackingRequest;
                fromJSON(_: any): _3.QueryBlockRewardsTrackingRequest;
                toJSON(_: _3.QueryBlockRewardsTrackingRequest): unknown;
                fromPartial(_: Partial<_3.QueryBlockRewardsTrackingRequest>): _3.QueryBlockRewardsTrackingRequest;
            };
            QueryBlockRewardsTrackingResponse: {
                encode(message: _3.QueryBlockRewardsTrackingResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _3.QueryBlockRewardsTrackingResponse;
                fromJSON(object: any): _3.QueryBlockRewardsTrackingResponse;
                toJSON(message: _3.QueryBlockRewardsTrackingResponse): unknown;
                fromPartial(object: Partial<_3.QueryBlockRewardsTrackingResponse>): _3.QueryBlockRewardsTrackingResponse;
            };
            QueryRewardsPoolRequest: {
                encode(_: _3.QueryRewardsPoolRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _3.QueryRewardsPoolRequest;
                fromJSON(_: any): _3.QueryRewardsPoolRequest;
                toJSON(_: _3.QueryRewardsPoolRequest): unknown;
                fromPartial(_: Partial<_3.QueryRewardsPoolRequest>): _3.QueryRewardsPoolRequest;
            };
            QueryRewardsPoolResponse: {
                encode(message: _3.QueryRewardsPoolResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _3.QueryRewardsPoolResponse;
                fromJSON(object: any): _3.QueryRewardsPoolResponse;
                toJSON(message: _3.QueryRewardsPoolResponse): unknown;
                fromPartial(object: Partial<_3.QueryRewardsPoolResponse>): _3.QueryRewardsPoolResponse;
            };
            QueryEstimateTxFeesRequest: {
                encode(message: _3.QueryEstimateTxFeesRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _3.QueryEstimateTxFeesRequest;
                fromJSON(object: any): _3.QueryEstimateTxFeesRequest;
                toJSON(message: _3.QueryEstimateTxFeesRequest): unknown;
                fromPartial(object: Partial<_3.QueryEstimateTxFeesRequest>): _3.QueryEstimateTxFeesRequest;
            };
            QueryEstimateTxFeesResponse: {
                encode(message: _3.QueryEstimateTxFeesResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _3.QueryEstimateTxFeesResponse;
                fromJSON(object: any): _3.QueryEstimateTxFeesResponse;
                toJSON(message: _3.QueryEstimateTxFeesResponse): unknown;
                fromPartial(object: Partial<_3.QueryEstimateTxFeesResponse>): _3.QueryEstimateTxFeesResponse;
            };
            BlockTracking: {
                encode(message: _3.BlockTracking, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _3.BlockTracking;
                fromJSON(object: any): _3.BlockTracking;
                toJSON(message: _3.BlockTracking): unknown;
                fromPartial(object: Partial<_3.BlockTracking>): _3.BlockTracking;
            };
            QueryRewardsRecordsRequest: {
                encode(message: _3.QueryRewardsRecordsRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _3.QueryRewardsRecordsRequest;
                fromJSON(object: any): _3.QueryRewardsRecordsRequest;
                toJSON(message: _3.QueryRewardsRecordsRequest): unknown;
                fromPartial(object: Partial<_3.QueryRewardsRecordsRequest>): _3.QueryRewardsRecordsRequest;
            };
            QueryRewardsRecordsResponse: {
                encode(message: _3.QueryRewardsRecordsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _3.QueryRewardsRecordsResponse;
                fromJSON(object: any): _3.QueryRewardsRecordsResponse;
                toJSON(message: _3.QueryRewardsRecordsResponse): unknown;
                fromPartial(object: Partial<_3.QueryRewardsRecordsResponse>): _3.QueryRewardsRecordsResponse;
            };
            QueryOutstandingRewardsRequest: {
                encode(message: _3.QueryOutstandingRewardsRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _3.QueryOutstandingRewardsRequest;
                fromJSON(object: any): _3.QueryOutstandingRewardsRequest;
                toJSON(message: _3.QueryOutstandingRewardsRequest): unknown;
                fromPartial(object: Partial<_3.QueryOutstandingRewardsRequest>): _3.QueryOutstandingRewardsRequest;
            };
            QueryOutstandingRewardsResponse: {
                encode(message: _3.QueryOutstandingRewardsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _3.QueryOutstandingRewardsResponse;
                fromJSON(object: any): _3.QueryOutstandingRewardsResponse;
                toJSON(message: _3.QueryOutstandingRewardsResponse): unknown;
                fromPartial(object: Partial<_3.QueryOutstandingRewardsResponse>): _3.QueryOutstandingRewardsResponse;
            };
            QueryFlatFeeRequest: {
                encode(message: _3.QueryFlatFeeRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _3.QueryFlatFeeRequest;
                fromJSON(object: any): _3.QueryFlatFeeRequest;
                toJSON(message: _3.QueryFlatFeeRequest): unknown;
                fromPartial(object: Partial<_3.QueryFlatFeeRequest>): _3.QueryFlatFeeRequest;
            };
            QueryFlatFeeResponse: {
                encode(message: _3.QueryFlatFeeResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _3.QueryFlatFeeResponse;
                fromJSON(object: any): _3.QueryFlatFeeResponse;
                toJSON(message: _3.QueryFlatFeeResponse): unknown;
                fromPartial(object: Partial<_3.QueryFlatFeeResponse>): _3.QueryFlatFeeResponse;
            };
            GenesisState: {
                encode(message: _2.GenesisState, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _2.GenesisState;
                fromJSON(object: any): _2.GenesisState;
                toJSON(message: _2.GenesisState): unknown;
                fromPartial(object: Partial<_2.GenesisState>): _2.GenesisState;
            };
            ContractMetadataSetEvent: {
                encode(message: _1.ContractMetadataSetEvent, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _1.ContractMetadataSetEvent;
                fromJSON(object: any): _1.ContractMetadataSetEvent;
                toJSON(message: _1.ContractMetadataSetEvent): unknown;
                fromPartial(object: Partial<_1.ContractMetadataSetEvent>): _1.ContractMetadataSetEvent;
            };
            ContractRewardCalculationEvent: {
                encode(message: _1.ContractRewardCalculationEvent, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _1.ContractRewardCalculationEvent;
                fromJSON(object: any): _1.ContractRewardCalculationEvent;
                toJSON(message: _1.ContractRewardCalculationEvent): unknown;
                fromPartial(object: Partial<_1.ContractRewardCalculationEvent>): _1.ContractRewardCalculationEvent;
            };
            RewardsWithdrawEvent: {
                encode(message: _1.RewardsWithdrawEvent, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _1.RewardsWithdrawEvent;
                fromJSON(object: any): _1.RewardsWithdrawEvent;
                toJSON(message: _1.RewardsWithdrawEvent): unknown;
                fromPartial(object: Partial<_1.RewardsWithdrawEvent>): _1.RewardsWithdrawEvent;
            };
            MinConsensusFeeSetEvent: {
                encode(message: _1.MinConsensusFeeSetEvent, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _1.MinConsensusFeeSetEvent;
                fromJSON(object: any): _1.MinConsensusFeeSetEvent;
                toJSON(message: _1.MinConsensusFeeSetEvent): unknown;
                fromPartial(object: Partial<_1.MinConsensusFeeSetEvent>): _1.MinConsensusFeeSetEvent;
            };
            ContractFlatFeeSetEvent: {
                encode(message: _1.ContractFlatFeeSetEvent, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _1.ContractFlatFeeSetEvent;
                fromJSON(object: any): _1.ContractFlatFeeSetEvent;
                toJSON(message: _1.ContractFlatFeeSetEvent): unknown;
                fromPartial(object: Partial<_1.ContractFlatFeeSetEvent>): _1.ContractFlatFeeSetEvent;
            };
        };
    }
    namespace tracking {
        const v1: {
            QueryClientImpl: typeof _19.QueryClientImpl;
            createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                blockGasTracking(request?: _7.QueryBlockGasTrackingRequest): Promise<_7.QueryBlockGasTrackingResponse>;
            };
            contractOperationFromJSON(object: any): _8.ContractOperation;
            contractOperationToJSON(object: _8.ContractOperation): string;
            ContractOperation: typeof _8.ContractOperation;
            TxInfo: {
                encode(message: _8.TxInfo, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _8.TxInfo;
                fromJSON(object: any): _8.TxInfo;
                toJSON(message: _8.TxInfo): unknown;
                fromPartial(object: Partial<_8.TxInfo>): _8.TxInfo;
            };
            ContractOperationInfo: {
                encode(message: _8.ContractOperationInfo, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _8.ContractOperationInfo;
                fromJSON(object: any): _8.ContractOperationInfo;
                toJSON(message: _8.ContractOperationInfo): unknown;
                fromPartial(object: Partial<_8.ContractOperationInfo>): _8.ContractOperationInfo;
            };
            BlockTracking: {
                encode(message: _8.BlockTracking, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _8.BlockTracking;
                fromJSON(object: any): _8.BlockTracking;
                toJSON(message: _8.BlockTracking): unknown;
                fromPartial(object: Partial<_8.BlockTracking>): _8.BlockTracking;
            };
            TxTracking: {
                encode(message: _8.TxTracking, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _8.TxTracking;
                fromJSON(object: any): _8.TxTracking;
                toJSON(message: _8.TxTracking): unknown;
                fromPartial(object: Partial<_8.TxTracking>): _8.TxTracking;
            };
            QueryBlockGasTrackingRequest: {
                encode(_: _7.QueryBlockGasTrackingRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _7.QueryBlockGasTrackingRequest;
                fromJSON(_: any): _7.QueryBlockGasTrackingRequest;
                toJSON(_: _7.QueryBlockGasTrackingRequest): unknown;
                fromPartial(_: Partial<_7.QueryBlockGasTrackingRequest>): _7.QueryBlockGasTrackingRequest;
            };
            QueryBlockGasTrackingResponse: {
                encode(message: _7.QueryBlockGasTrackingResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _7.QueryBlockGasTrackingResponse;
                fromJSON(object: any): _7.QueryBlockGasTrackingResponse;
                toJSON(message: _7.QueryBlockGasTrackingResponse): unknown;
                fromPartial(object: Partial<_7.QueryBlockGasTrackingResponse>): _7.QueryBlockGasTrackingResponse;
            };
            GenesisState: {
                encode(message: _6.GenesisState, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _6.GenesisState;
                fromJSON(object: any): _6.GenesisState;
                toJSON(message: _6.GenesisState): unknown;
                fromPartial(object: Partial<_6.GenesisState>): _6.GenesisState;
            };
        };
    }
}
