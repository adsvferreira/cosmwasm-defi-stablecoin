{"message":"unresolved import `cosmwasm_schema`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"contracts/decentralized_stablecoin/src/msg.rs","byte_start":4,"byte_end":19,"line_start":1,"line_end":1,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"use cosmwasm_schema::{cw_serde, QueryResponses};","highlight_start":5,"highlight_end":20}],"label":"use of undeclared crate or module `cosmwasm_schema`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is a crate or module with a similar name","code":null,"level":"help","spans":[{"file_name":"contracts/decentralized_stablecoin/src/msg.rs","byte_start":4,"byte_end":19,"line_start":1,"line_end":1,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"use cosmwasm_schema::{cw_serde, QueryResponses};","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":"cosmwasm_std","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `cosmwasm_schema`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/msg.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse cosmwasm_schema::{cw_serde, QueryResponses};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `cosmwasm_schema`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: there is a crate or module with a similar name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse \u001b[0m\u001b[0m\u001b[38;5;10mcosmwasm_std\u001b[0m\u001b[0m::{cw_serde, QueryResponses};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~\u001b[0m\n\n"}
{"message":"unresolved import `cosmwasm_schema`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":4,"byte_end":19,"line_start":1,"line_end":1,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"use cosmwasm_schema::cw_serde;","highlight_start":5,"highlight_end":20}],"label":"use of undeclared crate or module `cosmwasm_schema`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is a crate or module with a similar name","code":null,"level":"help","spans":[{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":4,"byte_end":19,"line_start":1,"line_end":1,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"use cosmwasm_schema::cw_serde;","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":"cosmwasm_std","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `cosmwasm_schema`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/state.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse cosmwasm_schema::cw_serde;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `cosmwasm_schema`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: there is a crate or module with a similar name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse \u001b[0m\u001b[0m\u001b[38;5;10mcosmwasm_std\u001b[0m\u001b[0m::cw_serde;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~\u001b[0m\n\n"}
{"message":"cannot determine resolution for the attribute macro `cw_serde`","code":null,"level":"error","spans":[{"file_name":"contracts/decentralized_stablecoin/src/msg.rs","byte_start":258,"byte_end":266,"line_start":9,"line_end":9,"column_start":3,"column_end":11,"is_primary":true,"text":[{"text":"#[cw_serde]","highlight_start":3,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"import resolution is stuck, try simplifying macro imports","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot determine resolution for the attribute macro `cw_serde`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/msg.rs:9:3\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cw_serde]\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: import resolution is stuck, try simplifying macro imports\u001b[0m\n\n"}
{"message":"cannot determine resolution for the attribute macro `cw_serde`","code":null,"level":"error","spans":[{"file_name":"contracts/decentralized_stablecoin/src/msg.rs","byte_start":1067,"byte_end":1075,"line_start":31,"line_end":31,"column_start":3,"column_end":11,"is_primary":true,"text":[{"text":"#[cw_serde]","highlight_start":3,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"import resolution is stuck, try simplifying macro imports","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot determine resolution for the attribute macro `cw_serde`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/msg.rs:31:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cw_serde]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: import resolution is stuck, try simplifying macro imports\u001b[0m\n\n"}
{"message":"cannot determine resolution for the derive macro `QueryResponses`","code":null,"level":"error","spans":[{"file_name":"contracts/decentralized_stablecoin/src/msg.rs","byte_start":3904,"byte_end":3918,"line_start":97,"line_end":97,"column_start":10,"column_end":24,"is_primary":true,"text":[{"text":"#[derive(QueryResponses)]","highlight_start":10,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"import resolution is stuck, try simplifying macro imports","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot determine resolution for the derive macro `QueryResponses`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/msg.rs:97:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m97\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(QueryResponses)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: import resolution is stuck, try simplifying macro imports\u001b[0m\n\n"}
{"message":"cannot determine resolution for the attribute macro `cw_serde`","code":null,"level":"error","spans":[{"file_name":"contracts/decentralized_stablecoin/src/msg.rs","byte_start":3885,"byte_end":3893,"line_start":96,"line_end":96,"column_start":3,"column_end":11,"is_primary":true,"text":[{"text":"#[cw_serde]","highlight_start":3,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"import resolution is stuck, try simplifying macro imports","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot determine resolution for the attribute macro `cw_serde`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/msg.rs:96:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m96\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cw_serde]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: import resolution is stuck, try simplifying macro imports\u001b[0m\n\n"}
{"message":"cannot find attribute `returns` in this scope","code":null,"level":"error","spans":[{"file_name":"contracts/decentralized_stablecoin/src/msg.rs","byte_start":4042,"byte_end":4049,"line_start":100,"line_end":100,"column_start":7,"column_end":14,"is_primary":true,"text":[{"text":"    #[returns(ClaimsResponse)]","highlight_start":7,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find attribute `returns` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/msg.rs:100:7\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m100\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[returns(ClaimsResponse)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\n\n"}
{"message":"cannot find attribute `returns` in this scope","code":null,"level":"error","spans":[{"file_name":"contracts/decentralized_stablecoin/src/msg.rs","byte_start":4175,"byte_end":4182,"line_start":103,"line_end":103,"column_start":7,"column_end":14,"is_primary":true,"text":[{"text":"    #[returns(InvestmentResponse)]","highlight_start":7,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find attribute `returns` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/msg.rs:103:7\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[returns(InvestmentResponse)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\n\n"}
{"message":"cannot find attribute `returns` in this scope","code":null,"level":"error","spans":[{"file_name":"contracts/decentralized_stablecoin/src/msg.rs","byte_start":4317,"byte_end":4324,"line_start":107,"line_end":107,"column_start":7,"column_end":14,"is_primary":true,"text":[{"text":"    #[returns(BalanceResponse)]","highlight_start":7,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find attribute `returns` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/msg.rs:107:7\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m107\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[returns(BalanceResponse)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\n\n"}
{"message":"cannot find attribute `returns` in this scope","code":null,"level":"error","spans":[{"file_name":"contracts/decentralized_stablecoin/src/msg.rs","byte_start":4471,"byte_end":4478,"line_start":110,"line_end":110,"column_start":7,"column_end":14,"is_primary":true,"text":[{"text":"    #[returns(TokenInfoResponse)]","highlight_start":7,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find attribute `returns` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/msg.rs:110:7\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m110\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[returns(TokenInfoResponse)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\n\n"}
{"message":"cannot find attribute `returns` in this scope","code":null,"level":"error","spans":[{"file_name":"contracts/decentralized_stablecoin/src/msg.rs","byte_start":4643,"byte_end":4650,"line_start":114,"line_end":114,"column_start":7,"column_end":14,"is_primary":true,"text":[{"text":"    #[returns(AllowanceResponse)]","highlight_start":7,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find attribute `returns` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/msg.rs:114:7\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m114\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[returns(AllowanceResponse)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\n\n"}
{"message":"cannot determine resolution for the attribute macro `cw_serde`","code":null,"level":"error","spans":[{"file_name":"contracts/decentralized_stablecoin/src/msg.rs","byte_start":4726,"byte_end":4734,"line_start":118,"line_end":118,"column_start":3,"column_end":11,"is_primary":true,"text":[{"text":"#[cw_serde]","highlight_start":3,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"import resolution is stuck, try simplifying macro imports","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot determine resolution for the attribute macro `cw_serde`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/msg.rs:118:3\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cw_serde]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: import resolution is stuck, try simplifying macro imports\u001b[0m\n\n"}
{"message":"cannot determine resolution for the attribute macro `cw_serde`","code":null,"level":"error","spans":[{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":307,"byte_end":315,"line_start":10,"line_end":10,"column_start":3,"column_end":11,"is_primary":true,"text":[{"text":"#[cw_serde]","highlight_start":3,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"import resolution is stuck, try simplifying macro imports","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot determine resolution for the attribute macro `cw_serde`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/state.rs:10:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cw_serde]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: import resolution is stuck, try simplifying macro imports\u001b[0m\n\n"}
{"message":"cannot determine resolution for the attribute macro `cw_serde`","code":null,"level":"error","spans":[{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":1224,"byte_end":1232,"line_start":30,"line_end":30,"column_start":3,"column_end":11,"is_primary":true,"text":[{"text":"#[cw_serde]","highlight_start":3,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"import resolution is stuck, try simplifying macro imports","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot determine resolution for the attribute macro `cw_serde`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/state.rs:30:3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cw_serde]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: import resolution is stuck, try simplifying macro imports\u001b[0m\n\n"}
{"message":"unused imports: `AllowanceResponse`, `BalanceResponse`, `TokenInfoResponse`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"contracts/decentralized_stablecoin/src/msg.rs","byte_start":135,"byte_end":152,"line_start":5,"line_end":5,"column_start":12,"column_end":29,"is_primary":true,"text":[{"text":"use cw20::{AllowanceResponse, BalanceResponse, TokenInfoResponse};","highlight_start":12,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/msg.rs","byte_start":154,"byte_end":169,"line_start":5,"line_end":5,"column_start":31,"column_end":46,"is_primary":true,"text":[{"text":"use cw20::{AllowanceResponse, BalanceResponse, TokenInfoResponse};","highlight_start":31,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/msg.rs","byte_start":171,"byte_end":188,"line_start":5,"line_end":5,"column_start":48,"column_end":65,"is_primary":true,"text":[{"text":"use cw20::{AllowanceResponse, BalanceResponse, TokenInfoResponse};","highlight_start":48,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"contracts/decentralized_stablecoin/src/msg.rs","byte_start":124,"byte_end":190,"line_start":5,"line_end":5,"column_start":1,"column_end":67,"is_primary":true,"text":[{"text":"use cw20::{AllowanceResponse, BalanceResponse, TokenInfoResponse};","highlight_start":1,"highlight_end":67}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `AllowanceResponse`, `BalanceResponse`, `TokenInfoResponse`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/msg.rs:5:12\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse cw20::{AllowanceResponse, BalanceResponse, TokenInfoResponse};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"use of deprecated function `cosmwasm_std::to_binary`: use to_json_binary instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"contracts/decentralized_stablecoin/src/contract.rs","byte_start":94,"byte_end":103,"line_start":4,"line_end":4,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"    coin, to_binary, Addr, BankMsg, Binary, Decimal, Deps, DepsMut, DistributionMsg, Env,","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(deprecated)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `cosmwasm_std::to_binary`: use to_json_binary instead\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/contract.rs:4:11\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    coin, to_binary, Addr, BankMsg, Binary, Decimal, Deps, DepsMut, DistributionMsg, Env,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(deprecated)]` on by default\u001b[0m\n\n"}
{"message":"use of deprecated function `cosmwasm_std::to_binary`: use to_json_binary instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"contracts/decentralized_stablecoin/src/contract.rs","byte_start":11717,"byte_end":11726,"line_start":335,"line_end":335,"column_start":15,"column_end":24,"is_primary":true,"text":[{"text":"    let msg = to_binary(&ExecuteMsg::_BondAllTokens {})?;","highlight_start":15,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `cosmwasm_std::to_binary`: use to_json_binary instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/contract.rs:335:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m335\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let msg = to_binary(&ExecuteMsg::_BondAllTokens {})?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"message":"use of deprecated function `cosmwasm_std::to_binary`: use to_json_binary instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"contracts/decentralized_stablecoin/src/contract.rs","byte_start":13882,"byte_end":13891,"line_start":397,"line_end":397,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"            to_binary(&CLAIMS.query_claims(deps, &deps.api.addr_validate(&address)?)?)","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `cosmwasm_std::to_binary`: use to_json_binary instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/contract.rs:397:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m397\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            to_binary(&CLAIMS.query_claims(deps, &deps.api.addr_validate(&address)?)?)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"message":"use of deprecated function `cosmwasm_std::to_binary`: use to_json_binary instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"contracts/decentralized_stablecoin/src/contract.rs","byte_start":14002,"byte_end":14011,"line_start":399,"line_end":399,"column_start":36,"column_end":45,"is_primary":true,"text":[{"text":"        QueryMsg::Investment {} => to_binary(&query_investment(deps)?),","highlight_start":36,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `cosmwasm_std::to_binary`: use to_json_binary instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/contract.rs:399:36\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m399\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        QueryMsg::Investment {} => to_binary(&query_investment(deps)?),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"message":"use of deprecated function `cosmwasm_std::to_binary`: use to_json_binary instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"contracts/decentralized_stablecoin/src/contract.rs","byte_start":14109,"byte_end":14118,"line_start":401,"line_end":401,"column_start":35,"column_end":44,"is_primary":true,"text":[{"text":"        QueryMsg::TokenInfo {} => to_binary(&query_token_info(deps)?),","highlight_start":35,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `cosmwasm_std::to_binary`: use to_json_binary instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/contract.rs:401:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m401\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        QueryMsg::TokenInfo {} => to_binary(&query_token_info(deps)?),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"message":"use of deprecated function `cosmwasm_std::to_binary`: use to_json_binary instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"contracts/decentralized_stablecoin/src/contract.rs","byte_start":14187,"byte_end":14196,"line_start":402,"line_end":402,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"        QueryMsg::Balance { address } => to_binary(&query_balance(deps, address)?),","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `cosmwasm_std::to_binary`: use to_json_binary instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/contract.rs:402:42\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m402\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        QueryMsg::Balance { address } => to_binary(&query_balance(deps, address)?),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"message":"use of deprecated function `cosmwasm_std::to_binary`: use to_json_binary instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"contracts/decentralized_stablecoin/src/contract.rs","byte_start":14294,"byte_end":14303,"line_start":404,"line_end":404,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"            to_binary(&query_allowance(deps, owner, spender)?)","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `cosmwasm_std::to_binary`: use to_json_binary instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/contract.rs:404:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m404\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            to_binary(&query_allowance(deps, owner, spender)?)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"message":"the method `save` exists for struct `Item<'static, InvestmentInfo>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"contracts/decentralized_stablecoin/src/contract.rs","byte_start":2329,"byte_end":2333,"line_start":68,"line_end":68,"column_start":16,"column_end":20,"is_primary":true,"text":[{"text":"    INVESTMENT.save(deps.storage, &invest)?;","highlight_start":16,"highlight_end":20}],"label":"method cannot be called on `Item<'static, InvestmentInfo>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":317,"byte_end":342,"line_start":11,"line_end":11,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"pub struct InvestmentInfo {","highlight_start":1,"highlight_end":26}],"label":"doesn't satisfy `InvestmentInfo: serde::de::Deserialize<'de>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":317,"byte_end":342,"line_start":11,"line_end":11,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"pub struct InvestmentInfo {","highlight_start":1,"highlight_end":26}],"label":"doesn't satisfy `InvestmentInfo: serde::de::DeserializeOwned`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":317,"byte_end":342,"line_start":11,"line_end":11,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"pub struct InvestmentInfo {","highlight_start":1,"highlight_end":26}],"label":"doesn't satisfy `InvestmentInfo: serde::ser::Serialize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`InvestmentInfo: serde::ser::Serialize`\n`InvestmentInfo: serde::de::DeserializeOwned`\n`InvestmentInfo: serde::de::Deserialize<'de>`\nwhich is required by `InvestmentInfo: serde::de::DeserializeOwned`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the traits `serde::de::Deserialize`, `serde::de::DeserializeOwned`,  and `serde::ser::Serialize` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs","byte_start":19706,"byte_end":19739,"line_start":535,"line_end":535,"column_start":1,"column_end":34,"is_primary":true,"text":[{"text":"pub trait Deserialize<'de>: Sized {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs","byte_start":22432,"byte_end":22485,"line_start":607,"line_end":607,"column_start":1,"column_end":54,"is_primary":true,"text":[{"text":"pub trait DeserializeOwned: for<'de> Deserialize<'de> {}","highlight_start":1,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/ser/mod.rs","byte_start":8041,"byte_end":8060,"line_start":218,"line_end":218,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub trait Serialize {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `save` exists for struct `Item<'static, InvestmentInfo>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/contract.rs:68:16\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    INVESTMENT.save(deps.storage, &invest)?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `Item<'static, InvestmentInfo>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/state.rs:11:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct InvestmentInfo {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `InvestmentInfo: serde::de::Deserialize<'de>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `InvestmentInfo: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `InvestmentInfo: serde::ser::Serialize`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `InvestmentInfo: serde::ser::Serialize`\u001b[0m\n\u001b[0m            `InvestmentInfo: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m            `InvestmentInfo: serde::de::Deserialize<'de>`\u001b[0m\n\u001b[0m            which is required by `InvestmentInfo: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the traits `serde::de::Deserialize`, `serde::de::DeserializeOwned`,  and `serde::ser::Serialize` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs:535:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m535\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Deserialize<'de>: Sized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m607\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait DeserializeOwned: for<'de> Deserialize<'de> {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/ser/mod.rs:218:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Serialize {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"the method `save` exists for struct `Item<'static, Supply>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"contracts/decentralized_stablecoin/src/contract.rs","byte_start":2436,"byte_end":2440,"line_start":72,"line_end":72,"column_start":18,"column_end":22,"is_primary":true,"text":[{"text":"    TOTAL_SUPPLY.save(deps.storage, &supply)?;","highlight_start":18,"highlight_end":22}],"label":"method cannot be called on `Item<'static, Supply>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":1253,"byte_end":1270,"line_start":32,"line_end":32,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"pub struct Supply {","highlight_start":1,"highlight_end":18}],"label":"doesn't satisfy `Supply: serde::de::Deserialize<'de>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":1253,"byte_end":1270,"line_start":32,"line_end":32,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"pub struct Supply {","highlight_start":1,"highlight_end":18}],"label":"doesn't satisfy `Supply: serde::de::DeserializeOwned`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":1253,"byte_end":1270,"line_start":32,"line_end":32,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"pub struct Supply {","highlight_start":1,"highlight_end":18}],"label":"doesn't satisfy `Supply: serde::ser::Serialize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`Supply: serde::ser::Serialize`\n`Supply: serde::de::DeserializeOwned`\n`Supply: serde::de::Deserialize<'de>`\nwhich is required by `Supply: serde::de::DeserializeOwned`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the traits `serde::de::Deserialize`, `serde::de::DeserializeOwned`,  and `serde::ser::Serialize` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs","byte_start":19706,"byte_end":19739,"line_start":535,"line_end":535,"column_start":1,"column_end":34,"is_primary":true,"text":[{"text":"pub trait Deserialize<'de>: Sized {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs","byte_start":22432,"byte_end":22485,"line_start":607,"line_end":607,"column_start":1,"column_end":54,"is_primary":true,"text":[{"text":"pub trait DeserializeOwned: for<'de> Deserialize<'de> {}","highlight_start":1,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/ser/mod.rs","byte_start":8041,"byte_end":8060,"line_start":218,"line_end":218,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub trait Serialize {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `save` exists for struct `Item<'static, Supply>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/contract.rs:72:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    TOTAL_SUPPLY.save(deps.storage, &supply)?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `Item<'static, Supply>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/state.rs:32:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Supply {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Supply: serde::de::Deserialize<'de>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Supply: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Supply: serde::ser::Serialize`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `Supply: serde::ser::Serialize`\u001b[0m\n\u001b[0m            `Supply: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m            `Supply: serde::de::Deserialize<'de>`\u001b[0m\n\u001b[0m            which is required by `Supply: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the traits `serde::de::Deserialize`, `serde::de::DeserializeOwned`,  and `serde::ser::Serialize` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs:535:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m535\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Deserialize<'de>: Sized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m607\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait DeserializeOwned: for<'de> Deserialize<'de> {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/ser/mod.rs:218:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Serialize {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"the method `load` exists for struct `Item<'static, InvestmentInfo>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"contracts/decentralized_stablecoin/src/contract.rs","byte_start":5620,"byte_end":5624,"line_start":170,"line_end":170,"column_start":29,"column_end":33,"is_primary":true,"text":[{"text":"    let invest = INVESTMENT.load(deps.storage)?;","highlight_start":29,"highlight_end":33}],"label":"method cannot be called on `Item<'static, InvestmentInfo>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":317,"byte_end":342,"line_start":11,"line_end":11,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"pub struct InvestmentInfo {","highlight_start":1,"highlight_end":26}],"label":"doesn't satisfy `InvestmentInfo: serde::de::Deserialize<'de>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":317,"byte_end":342,"line_start":11,"line_end":11,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"pub struct InvestmentInfo {","highlight_start":1,"highlight_end":26}],"label":"doesn't satisfy `InvestmentInfo: serde::de::DeserializeOwned`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":317,"byte_end":342,"line_start":11,"line_end":11,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"pub struct InvestmentInfo {","highlight_start":1,"highlight_end":26}],"label":"doesn't satisfy `InvestmentInfo: serde::ser::Serialize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`InvestmentInfo: serde::ser::Serialize`\n`InvestmentInfo: serde::de::DeserializeOwned`\n`InvestmentInfo: serde::de::Deserialize<'de>`\nwhich is required by `InvestmentInfo: serde::de::DeserializeOwned`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the traits `serde::de::Deserialize`, `serde::de::DeserializeOwned`,  and `serde::ser::Serialize` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs","byte_start":19706,"byte_end":19739,"line_start":535,"line_end":535,"column_start":1,"column_end":34,"is_primary":true,"text":[{"text":"pub trait Deserialize<'de>: Sized {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs","byte_start":22432,"byte_end":22485,"line_start":607,"line_end":607,"column_start":1,"column_end":54,"is_primary":true,"text":[{"text":"pub trait DeserializeOwned: for<'de> Deserialize<'de> {}","highlight_start":1,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/ser/mod.rs","byte_start":8041,"byte_end":8060,"line_start":218,"line_end":218,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub trait Serialize {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `load` exists for struct `Item<'static, InvestmentInfo>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/contract.rs:170:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m170\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let invest = INVESTMENT.load(deps.storage)?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `Item<'static, InvestmentInfo>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/state.rs:11:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct InvestmentInfo {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `InvestmentInfo: serde::de::Deserialize<'de>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `InvestmentInfo: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `InvestmentInfo: serde::ser::Serialize`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `InvestmentInfo: serde::ser::Serialize`\u001b[0m\n\u001b[0m            `InvestmentInfo: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m            `InvestmentInfo: serde::de::Deserialize<'de>`\u001b[0m\n\u001b[0m            which is required by `InvestmentInfo: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the traits `serde::de::Deserialize`, `serde::de::DeserializeOwned`,  and `serde::ser::Serialize` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs:535:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m535\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Deserialize<'de>: Sized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m607\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait DeserializeOwned: for<'de> Deserialize<'de> {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/ser/mod.rs:218:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Serialize {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"the method `load` exists for struct `Item<'static, Supply>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"contracts/decentralized_stablecoin/src/contract.rs","byte_start":6146,"byte_end":6150,"line_start":184,"line_end":184,"column_start":35,"column_end":39,"is_primary":true,"text":[{"text":"    let mut supply = TOTAL_SUPPLY.load(deps.storage)?;","highlight_start":35,"highlight_end":39}],"label":"method cannot be called on `Item<'static, Supply>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":1253,"byte_end":1270,"line_start":32,"line_end":32,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"pub struct Supply {","highlight_start":1,"highlight_end":18}],"label":"doesn't satisfy `Supply: serde::de::Deserialize<'de>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":1253,"byte_end":1270,"line_start":32,"line_end":32,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"pub struct Supply {","highlight_start":1,"highlight_end":18}],"label":"doesn't satisfy `Supply: serde::de::DeserializeOwned`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":1253,"byte_end":1270,"line_start":32,"line_end":32,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"pub struct Supply {","highlight_start":1,"highlight_end":18}],"label":"doesn't satisfy `Supply: serde::ser::Serialize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`Supply: serde::ser::Serialize`\n`Supply: serde::de::DeserializeOwned`\n`Supply: serde::de::Deserialize<'de>`\nwhich is required by `Supply: serde::de::DeserializeOwned`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the traits `serde::de::Deserialize`, `serde::de::DeserializeOwned`,  and `serde::ser::Serialize` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs","byte_start":19706,"byte_end":19739,"line_start":535,"line_end":535,"column_start":1,"column_end":34,"is_primary":true,"text":[{"text":"pub trait Deserialize<'de>: Sized {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs","byte_start":22432,"byte_end":22485,"line_start":607,"line_end":607,"column_start":1,"column_end":54,"is_primary":true,"text":[{"text":"pub trait DeserializeOwned: for<'de> Deserialize<'de> {}","highlight_start":1,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/ser/mod.rs","byte_start":8041,"byte_end":8060,"line_start":218,"line_end":218,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub trait Serialize {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `load` exists for struct `Item<'static, Supply>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/contract.rs:184:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut supply = TOTAL_SUPPLY.load(deps.storage)?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `Item<'static, Supply>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/state.rs:32:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Supply {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Supply: serde::de::Deserialize<'de>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Supply: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Supply: serde::ser::Serialize`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `Supply: serde::ser::Serialize`\u001b[0m\n\u001b[0m            `Supply: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m            `Supply: serde::de::Deserialize<'de>`\u001b[0m\n\u001b[0m            which is required by `Supply: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the traits `serde::de::Deserialize`, `serde::de::DeserializeOwned`,  and `serde::ser::Serialize` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs:535:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m535\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Deserialize<'de>: Sized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m607\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait DeserializeOwned: for<'de> Deserialize<'de> {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/ser/mod.rs:218:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Serialize {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"the method `save` exists for struct `Item<'static, Supply>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"contracts/decentralized_stablecoin/src/contract.rs","byte_start":6704,"byte_end":6708,"line_start":196,"line_end":196,"column_start":18,"column_end":22,"is_primary":true,"text":[{"text":"    TOTAL_SUPPLY.save(deps.storage, &supply)?;","highlight_start":18,"highlight_end":22}],"label":"method cannot be called on `Item<'static, Supply>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":1253,"byte_end":1270,"line_start":32,"line_end":32,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"pub struct Supply {","highlight_start":1,"highlight_end":18}],"label":"doesn't satisfy `Supply: serde::de::Deserialize<'de>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":1253,"byte_end":1270,"line_start":32,"line_end":32,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"pub struct Supply {","highlight_start":1,"highlight_end":18}],"label":"doesn't satisfy `Supply: serde::de::DeserializeOwned`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":1253,"byte_end":1270,"line_start":32,"line_end":32,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"pub struct Supply {","highlight_start":1,"highlight_end":18}],"label":"doesn't satisfy `Supply: serde::ser::Serialize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`Supply: serde::ser::Serialize`\n`Supply: serde::de::DeserializeOwned`\n`Supply: serde::de::Deserialize<'de>`\nwhich is required by `Supply: serde::de::DeserializeOwned`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the traits `serde::de::Deserialize`, `serde::de::DeserializeOwned`,  and `serde::ser::Serialize` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs","byte_start":19706,"byte_end":19739,"line_start":535,"line_end":535,"column_start":1,"column_end":34,"is_primary":true,"text":[{"text":"pub trait Deserialize<'de>: Sized {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs","byte_start":22432,"byte_end":22485,"line_start":607,"line_end":607,"column_start":1,"column_end":54,"is_primary":true,"text":[{"text":"pub trait DeserializeOwned: for<'de> Deserialize<'de> {}","highlight_start":1,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/ser/mod.rs","byte_start":8041,"byte_end":8060,"line_start":218,"line_end":218,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub trait Serialize {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `save` exists for struct `Item<'static, Supply>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/contract.rs:196:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m196\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    TOTAL_SUPPLY.save(deps.storage, &supply)?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `Item<'static, Supply>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/state.rs:32:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Supply {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Supply: serde::de::Deserialize<'de>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Supply: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Supply: serde::ser::Serialize`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `Supply: serde::ser::Serialize`\u001b[0m\n\u001b[0m            `Supply: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m            `Supply: serde::de::Deserialize<'de>`\u001b[0m\n\u001b[0m            which is required by `Supply: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the traits `serde::de::Deserialize`, `serde::de::DeserializeOwned`,  and `serde::ser::Serialize` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs:535:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m535\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Deserialize<'de>: Sized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m607\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait DeserializeOwned: for<'de> Deserialize<'de> {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/ser/mod.rs:218:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Serialize {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"the method `load` exists for struct `Item<'static, InvestmentInfo>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"contracts/decentralized_stablecoin/src/contract.rs","byte_start":7556,"byte_end":7560,"line_start":224,"line_end":224,"column_start":29,"column_end":33,"is_primary":true,"text":[{"text":"    let invest = INVESTMENT.load(deps.storage)?;","highlight_start":29,"highlight_end":33}],"label":"method cannot be called on `Item<'static, InvestmentInfo>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":317,"byte_end":342,"line_start":11,"line_end":11,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"pub struct InvestmentInfo {","highlight_start":1,"highlight_end":26}],"label":"doesn't satisfy `InvestmentInfo: serde::de::Deserialize<'de>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":317,"byte_end":342,"line_start":11,"line_end":11,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"pub struct InvestmentInfo {","highlight_start":1,"highlight_end":26}],"label":"doesn't satisfy `InvestmentInfo: serde::de::DeserializeOwned`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":317,"byte_end":342,"line_start":11,"line_end":11,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"pub struct InvestmentInfo {","highlight_start":1,"highlight_end":26}],"label":"doesn't satisfy `InvestmentInfo: serde::ser::Serialize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`InvestmentInfo: serde::ser::Serialize`\n`InvestmentInfo: serde::de::DeserializeOwned`\n`InvestmentInfo: serde::de::Deserialize<'de>`\nwhich is required by `InvestmentInfo: serde::de::DeserializeOwned`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the traits `serde::de::Deserialize`, `serde::de::DeserializeOwned`,  and `serde::ser::Serialize` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs","byte_start":19706,"byte_end":19739,"line_start":535,"line_end":535,"column_start":1,"column_end":34,"is_primary":true,"text":[{"text":"pub trait Deserialize<'de>: Sized {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs","byte_start":22432,"byte_end":22485,"line_start":607,"line_end":607,"column_start":1,"column_end":54,"is_primary":true,"text":[{"text":"pub trait DeserializeOwned: for<'de> Deserialize<'de> {}","highlight_start":1,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/ser/mod.rs","byte_start":8041,"byte_end":8060,"line_start":218,"line_end":218,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub trait Serialize {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `load` exists for struct `Item<'static, InvestmentInfo>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/contract.rs:224:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m224\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let invest = INVESTMENT.load(deps.storage)?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `Item<'static, InvestmentInfo>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/state.rs:11:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct InvestmentInfo {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `InvestmentInfo: serde::de::Deserialize<'de>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `InvestmentInfo: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `InvestmentInfo: serde::ser::Serialize`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `InvestmentInfo: serde::ser::Serialize`\u001b[0m\n\u001b[0m            `InvestmentInfo: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m            `InvestmentInfo: serde::de::Deserialize<'de>`\u001b[0m\n\u001b[0m            which is required by `InvestmentInfo: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the traits `serde::de::Deserialize`, `serde::de::DeserializeOwned`,  and `serde::ser::Serialize` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs:535:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m535\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Deserialize<'de>: Sized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m607\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait DeserializeOwned: for<'de> Deserialize<'de> {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/ser/mod.rs:218:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Serialize {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"the method `load` exists for struct `Item<'static, Supply>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"contracts/decentralized_stablecoin/src/contract.rs","byte_start":8808,"byte_end":8812,"line_start":258,"line_end":258,"column_start":35,"column_end":39,"is_primary":true,"text":[{"text":"    let mut supply = TOTAL_SUPPLY.load(deps.storage)?;","highlight_start":35,"highlight_end":39}],"label":"method cannot be called on `Item<'static, Supply>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":1253,"byte_end":1270,"line_start":32,"line_end":32,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"pub struct Supply {","highlight_start":1,"highlight_end":18}],"label":"doesn't satisfy `Supply: serde::de::Deserialize<'de>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":1253,"byte_end":1270,"line_start":32,"line_end":32,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"pub struct Supply {","highlight_start":1,"highlight_end":18}],"label":"doesn't satisfy `Supply: serde::de::DeserializeOwned`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":1253,"byte_end":1270,"line_start":32,"line_end":32,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"pub struct Supply {","highlight_start":1,"highlight_end":18}],"label":"doesn't satisfy `Supply: serde::ser::Serialize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`Supply: serde::ser::Serialize`\n`Supply: serde::de::DeserializeOwned`\n`Supply: serde::de::Deserialize<'de>`\nwhich is required by `Supply: serde::de::DeserializeOwned`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the traits `serde::de::Deserialize`, `serde::de::DeserializeOwned`,  and `serde::ser::Serialize` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs","byte_start":19706,"byte_end":19739,"line_start":535,"line_end":535,"column_start":1,"column_end":34,"is_primary":true,"text":[{"text":"pub trait Deserialize<'de>: Sized {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs","byte_start":22432,"byte_end":22485,"line_start":607,"line_end":607,"column_start":1,"column_end":54,"is_primary":true,"text":[{"text":"pub trait DeserializeOwned: for<'de> Deserialize<'de> {}","highlight_start":1,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/ser/mod.rs","byte_start":8041,"byte_end":8060,"line_start":218,"line_end":218,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub trait Serialize {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `load` exists for struct `Item<'static, Supply>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/contract.rs:258:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m258\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut supply = TOTAL_SUPPLY.load(deps.storage)?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `Item<'static, Supply>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/state.rs:32:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Supply {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Supply: serde::de::Deserialize<'de>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Supply: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Supply: serde::ser::Serialize`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `Supply: serde::ser::Serialize`\u001b[0m\n\u001b[0m            `Supply: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m            `Supply: serde::de::Deserialize<'de>`\u001b[0m\n\u001b[0m            which is required by `Supply: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the traits `serde::de::Deserialize`, `serde::de::DeserializeOwned`,  and `serde::ser::Serialize` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs:535:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m535\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Deserialize<'de>: Sized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m607\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait DeserializeOwned: for<'de> Deserialize<'de> {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/ser/mod.rs:218:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Serialize {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"the method `save` exists for struct `Item<'static, Supply>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"contracts/decentralized_stablecoin/src/contract.rs","byte_start":9389,"byte_end":9393,"line_start":270,"line_end":270,"column_start":18,"column_end":22,"is_primary":true,"text":[{"text":"    TOTAL_SUPPLY.save(deps.storage, &supply)?;","highlight_start":18,"highlight_end":22}],"label":"method cannot be called on `Item<'static, Supply>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":1253,"byte_end":1270,"line_start":32,"line_end":32,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"pub struct Supply {","highlight_start":1,"highlight_end":18}],"label":"doesn't satisfy `Supply: serde::de::Deserialize<'de>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":1253,"byte_end":1270,"line_start":32,"line_end":32,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"pub struct Supply {","highlight_start":1,"highlight_end":18}],"label":"doesn't satisfy `Supply: serde::de::DeserializeOwned`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":1253,"byte_end":1270,"line_start":32,"line_end":32,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"pub struct Supply {","highlight_start":1,"highlight_end":18}],"label":"doesn't satisfy `Supply: serde::ser::Serialize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`Supply: serde::ser::Serialize`\n`Supply: serde::de::DeserializeOwned`\n`Supply: serde::de::Deserialize<'de>`\nwhich is required by `Supply: serde::de::DeserializeOwned`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the traits `serde::de::Deserialize`, `serde::de::DeserializeOwned`,  and `serde::ser::Serialize` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs","byte_start":19706,"byte_end":19739,"line_start":535,"line_end":535,"column_start":1,"column_end":34,"is_primary":true,"text":[{"text":"pub trait Deserialize<'de>: Sized {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs","byte_start":22432,"byte_end":22485,"line_start":607,"line_end":607,"column_start":1,"column_end":54,"is_primary":true,"text":[{"text":"pub trait DeserializeOwned: for<'de> Deserialize<'de> {}","highlight_start":1,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/ser/mod.rs","byte_start":8041,"byte_end":8060,"line_start":218,"line_end":218,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub trait Serialize {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `save` exists for struct `Item<'static, Supply>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/contract.rs:270:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m270\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    TOTAL_SUPPLY.save(deps.storage, &supply)?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `Item<'static, Supply>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/state.rs:32:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Supply {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Supply: serde::de::Deserialize<'de>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Supply: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Supply: serde::ser::Serialize`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `Supply: serde::ser::Serialize`\u001b[0m\n\u001b[0m            `Supply: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m            `Supply: serde::de::Deserialize<'de>`\u001b[0m\n\u001b[0m            which is required by `Supply: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the traits `serde::de::Deserialize`, `serde::de::DeserializeOwned`,  and `serde::ser::Serialize` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs:535:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m535\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Deserialize<'de>: Sized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m607\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait DeserializeOwned: for<'de> Deserialize<'de> {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/ser/mod.rs:218:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Serialize {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"the method `load` exists for struct `Item<'static, InvestmentInfo>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"contracts/decentralized_stablecoin/src/contract.rs","byte_start":10124,"byte_end":10128,"line_start":294,"line_end":294,"column_start":29,"column_end":33,"is_primary":true,"text":[{"text":"    let invest = INVESTMENT.load(deps.storage)?;","highlight_start":29,"highlight_end":33}],"label":"method cannot be called on `Item<'static, InvestmentInfo>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":317,"byte_end":342,"line_start":11,"line_end":11,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"pub struct InvestmentInfo {","highlight_start":1,"highlight_end":26}],"label":"doesn't satisfy `InvestmentInfo: serde::de::Deserialize<'de>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":317,"byte_end":342,"line_start":11,"line_end":11,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"pub struct InvestmentInfo {","highlight_start":1,"highlight_end":26}],"label":"doesn't satisfy `InvestmentInfo: serde::de::DeserializeOwned`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":317,"byte_end":342,"line_start":11,"line_end":11,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"pub struct InvestmentInfo {","highlight_start":1,"highlight_end":26}],"label":"doesn't satisfy `InvestmentInfo: serde::ser::Serialize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`InvestmentInfo: serde::ser::Serialize`\n`InvestmentInfo: serde::de::DeserializeOwned`\n`InvestmentInfo: serde::de::Deserialize<'de>`\nwhich is required by `InvestmentInfo: serde::de::DeserializeOwned`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the traits `serde::de::Deserialize`, `serde::de::DeserializeOwned`,  and `serde::ser::Serialize` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs","byte_start":19706,"byte_end":19739,"line_start":535,"line_end":535,"column_start":1,"column_end":34,"is_primary":true,"text":[{"text":"pub trait Deserialize<'de>: Sized {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs","byte_start":22432,"byte_end":22485,"line_start":607,"line_end":607,"column_start":1,"column_end":54,"is_primary":true,"text":[{"text":"pub trait DeserializeOwned: for<'de> Deserialize<'de> {}","highlight_start":1,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/ser/mod.rs","byte_start":8041,"byte_end":8060,"line_start":218,"line_end":218,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub trait Serialize {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `load` exists for struct `Item<'static, InvestmentInfo>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/contract.rs:294:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m294\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let invest = INVESTMENT.load(deps.storage)?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `Item<'static, InvestmentInfo>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/state.rs:11:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct InvestmentInfo {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `InvestmentInfo: serde::de::Deserialize<'de>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `InvestmentInfo: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `InvestmentInfo: serde::ser::Serialize`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `InvestmentInfo: serde::ser::Serialize`\u001b[0m\n\u001b[0m            `InvestmentInfo: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m            `InvestmentInfo: serde::de::Deserialize<'de>`\u001b[0m\n\u001b[0m            which is required by `InvestmentInfo: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the traits `serde::de::Deserialize`, `serde::de::DeserializeOwned`,  and `serde::ser::Serialize` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs:535:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m535\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Deserialize<'de>: Sized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m607\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait DeserializeOwned: for<'de> Deserialize<'de> {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/ser/mod.rs:218:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Serialize {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"the method `update` exists for struct `Item<'static, Supply>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"contracts/decentralized_stablecoin/src/contract.rs","byte_start":10820,"byte_end":10826,"line_start":311,"line_end":311,"column_start":18,"column_end":24,"is_primary":true,"text":[{"text":"    TOTAL_SUPPLY.update(deps.storage, |mut supply| -> StdResult<_> {","highlight_start":18,"highlight_end":24}],"label":"method cannot be called on `Item<'static, Supply>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":1253,"byte_end":1270,"line_start":32,"line_end":32,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"pub struct Supply {","highlight_start":1,"highlight_end":18}],"label":"doesn't satisfy `Supply: serde::de::Deserialize<'de>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":1253,"byte_end":1270,"line_start":32,"line_end":32,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"pub struct Supply {","highlight_start":1,"highlight_end":18}],"label":"doesn't satisfy `Supply: serde::de::DeserializeOwned`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":1253,"byte_end":1270,"line_start":32,"line_end":32,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"pub struct Supply {","highlight_start":1,"highlight_end":18}],"label":"doesn't satisfy `Supply: serde::ser::Serialize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`Supply: serde::ser::Serialize`\n`Supply: serde::de::DeserializeOwned`\n`Supply: serde::de::Deserialize<'de>`\nwhich is required by `Supply: serde::de::DeserializeOwned`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the traits `serde::de::Deserialize`, `serde::de::DeserializeOwned`,  and `serde::ser::Serialize` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs","byte_start":19706,"byte_end":19739,"line_start":535,"line_end":535,"column_start":1,"column_end":34,"is_primary":true,"text":[{"text":"pub trait Deserialize<'de>: Sized {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs","byte_start":22432,"byte_end":22485,"line_start":607,"line_end":607,"column_start":1,"column_end":54,"is_primary":true,"text":[{"text":"pub trait DeserializeOwned: for<'de> Deserialize<'de> {}","highlight_start":1,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/ser/mod.rs","byte_start":8041,"byte_end":8060,"line_start":218,"line_end":218,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub trait Serialize {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `update` exists for struct `Item<'static, Supply>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/contract.rs:311:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m311\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    TOTAL_SUPPLY.update(deps.storage, |mut supply| -> StdResult<_> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `Item<'static, Supply>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/state.rs:32:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Supply {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Supply: serde::de::Deserialize<'de>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Supply: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Supply: serde::ser::Serialize`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `Supply: serde::ser::Serialize`\u001b[0m\n\u001b[0m            `Supply: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m            `Supply: serde::de::Deserialize<'de>`\u001b[0m\n\u001b[0m            which is required by `Supply: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the traits `serde::de::Deserialize`, `serde::de::DeserializeOwned`,  and `serde::ser::Serialize` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs:535:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m535\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Deserialize<'de>: Sized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m607\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait DeserializeOwned: for<'de> Deserialize<'de> {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/ser/mod.rs:218:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Serialize {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"the method `load` exists for struct `Item<'static, InvestmentInfo>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"contracts/decentralized_stablecoin/src/contract.rs","byte_start":11682,"byte_end":11686,"line_start":334,"line_end":334,"column_start":29,"column_end":33,"is_primary":true,"text":[{"text":"    let invest = INVESTMENT.load(deps.storage)?;","highlight_start":29,"highlight_end":33}],"label":"method cannot be called on `Item<'static, InvestmentInfo>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":317,"byte_end":342,"line_start":11,"line_end":11,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"pub struct InvestmentInfo {","highlight_start":1,"highlight_end":26}],"label":"doesn't satisfy `InvestmentInfo: serde::de::Deserialize<'de>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":317,"byte_end":342,"line_start":11,"line_end":11,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"pub struct InvestmentInfo {","highlight_start":1,"highlight_end":26}],"label":"doesn't satisfy `InvestmentInfo: serde::de::DeserializeOwned`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":317,"byte_end":342,"line_start":11,"line_end":11,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"pub struct InvestmentInfo {","highlight_start":1,"highlight_end":26}],"label":"doesn't satisfy `InvestmentInfo: serde::ser::Serialize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`InvestmentInfo: serde::ser::Serialize`\n`InvestmentInfo: serde::de::DeserializeOwned`\n`InvestmentInfo: serde::de::Deserialize<'de>`\nwhich is required by `InvestmentInfo: serde::de::DeserializeOwned`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the traits `serde::de::Deserialize`, `serde::de::DeserializeOwned`,  and `serde::ser::Serialize` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs","byte_start":19706,"byte_end":19739,"line_start":535,"line_end":535,"column_start":1,"column_end":34,"is_primary":true,"text":[{"text":"pub trait Deserialize<'de>: Sized {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs","byte_start":22432,"byte_end":22485,"line_start":607,"line_end":607,"column_start":1,"column_end":54,"is_primary":true,"text":[{"text":"pub trait DeserializeOwned: for<'de> Deserialize<'de> {}","highlight_start":1,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/ser/mod.rs","byte_start":8041,"byte_end":8060,"line_start":218,"line_end":218,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub trait Serialize {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `load` exists for struct `Item<'static, InvestmentInfo>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/contract.rs:334:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m334\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let invest = INVESTMENT.load(deps.storage)?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `Item<'static, InvestmentInfo>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/state.rs:11:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct InvestmentInfo {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `InvestmentInfo: serde::de::Deserialize<'de>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `InvestmentInfo: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `InvestmentInfo: serde::ser::Serialize`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `InvestmentInfo: serde::ser::Serialize`\u001b[0m\n\u001b[0m            `InvestmentInfo: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m            `InvestmentInfo: serde::de::Deserialize<'de>`\u001b[0m\n\u001b[0m            which is required by `InvestmentInfo: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the traits `serde::de::Deserialize`, `serde::de::DeserializeOwned`,  and `serde::ser::Serialize` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs:535:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m535\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Deserialize<'de>: Sized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m607\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait DeserializeOwned: for<'de> Deserialize<'de> {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/ser/mod.rs:218:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Serialize {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"the trait bound `msg::ExecuteMsg: serde::ser::Serialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"contracts/decentralized_stablecoin/src/contract.rs","byte_start":11727,"byte_end":11757,"line_start":335,"line_end":335,"column_start":25,"column_end":55,"is_primary":true,"text":[{"text":"    let msg = to_binary(&ExecuteMsg::_BondAllTokens {})?;","highlight_start":25,"highlight_end":55}],"label":"the trait `serde::ser::Serialize` is not implemented for `msg::ExecuteMsg`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/contract.rs","byte_start":11717,"byte_end":11726,"line_start":335,"line_end":335,"column_start":15,"column_end":24,"is_primary":false,"text":[{"text":"    let msg = to_binary(&ExecuteMsg::_BondAllTokens {})?;","highlight_start":15,"highlight_end":24}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `serde::ser::Serialize`:\n  &'a T\n  &'a mut T\n  ()\n  (T0, T1)\n  (T0, T1, T2)\n  (T0, T1, T2, T3)\n  (T0, T1, T2, T3, T4)\n  (T0, T1, T2, T3, T4, T5)\nand 278 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `to_binary`","code":null,"level":"note","spans":[{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.5.1/src/serde.rs","byte_start":1267,"byte_end":1276,"line_start":40,"line_end":40,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"    T: Serialize + ?Sized,","highlight_start":8,"highlight_end":17}],"label":"required by this bound in `to_binary`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `msg::ExecuteMsg: serde::ser::Serialize` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/contract.rs:335:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m335\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let msg = to_binary(&ExecuteMsg::_BondAllTokens {})?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `serde::ser::Serialize` is not implemented for `msg::ExecuteMsg`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `serde::ser::Serialize`:\u001b[0m\n\u001b[0m              &'a T\u001b[0m\n\u001b[0m              &'a mut T\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (T0, T1)\u001b[0m\n\u001b[0m              (T0, T1, T2)\u001b[0m\n\u001b[0m              (T0, T1, T2, T3)\u001b[0m\n\u001b[0m              (T0, T1, T2, T3, T4)\u001b[0m\n\u001b[0m              (T0, T1, T2, T3, T4, T5)\u001b[0m\n\u001b[0m            and 278 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `to_binary`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.5.1/src/serde.rs:40:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    T: Serialize + ?Sized,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `to_binary`\u001b[0m\n\n"}
{"message":"the method `load` exists for struct `Item<'static, InvestmentInfo>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"contracts/decentralized_stablecoin/src/contract.rs","byte_start":12459,"byte_end":12463,"line_start":361,"line_end":361,"column_start":29,"column_end":33,"is_primary":true,"text":[{"text":"    let invest = INVESTMENT.load(deps.storage)?;","highlight_start":29,"highlight_end":33}],"label":"method cannot be called on `Item<'static, InvestmentInfo>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":317,"byte_end":342,"line_start":11,"line_end":11,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"pub struct InvestmentInfo {","highlight_start":1,"highlight_end":26}],"label":"doesn't satisfy `InvestmentInfo: serde::de::Deserialize<'de>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":317,"byte_end":342,"line_start":11,"line_end":11,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"pub struct InvestmentInfo {","highlight_start":1,"highlight_end":26}],"label":"doesn't satisfy `InvestmentInfo: serde::de::DeserializeOwned`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":317,"byte_end":342,"line_start":11,"line_end":11,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"pub struct InvestmentInfo {","highlight_start":1,"highlight_end":26}],"label":"doesn't satisfy `InvestmentInfo: serde::ser::Serialize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`InvestmentInfo: serde::ser::Serialize`\n`InvestmentInfo: serde::de::DeserializeOwned`\n`InvestmentInfo: serde::de::Deserialize<'de>`\nwhich is required by `InvestmentInfo: serde::de::DeserializeOwned`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the traits `serde::de::Deserialize`, `serde::de::DeserializeOwned`,  and `serde::ser::Serialize` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs","byte_start":19706,"byte_end":19739,"line_start":535,"line_end":535,"column_start":1,"column_end":34,"is_primary":true,"text":[{"text":"pub trait Deserialize<'de>: Sized {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs","byte_start":22432,"byte_end":22485,"line_start":607,"line_end":607,"column_start":1,"column_end":54,"is_primary":true,"text":[{"text":"pub trait DeserializeOwned: for<'de> Deserialize<'de> {}","highlight_start":1,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/ser/mod.rs","byte_start":8041,"byte_end":8060,"line_start":218,"line_end":218,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub trait Serialize {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `load` exists for struct `Item<'static, InvestmentInfo>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/contract.rs:361:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m361\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let invest = INVESTMENT.load(deps.storage)?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `Item<'static, InvestmentInfo>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/state.rs:11:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct InvestmentInfo {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `InvestmentInfo: serde::de::Deserialize<'de>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `InvestmentInfo: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `InvestmentInfo: serde::ser::Serialize`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `InvestmentInfo: serde::ser::Serialize`\u001b[0m\n\u001b[0m            `InvestmentInfo: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m            `InvestmentInfo: serde::de::Deserialize<'de>`\u001b[0m\n\u001b[0m            which is required by `InvestmentInfo: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the traits `serde::de::Deserialize`, `serde::de::DeserializeOwned`,  and `serde::ser::Serialize` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs:535:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m535\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Deserialize<'de>: Sized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m607\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait DeserializeOwned: for<'de> Deserialize<'de> {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/ser/mod.rs:218:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Serialize {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"the method `update` exists for struct `Item<'static, Supply>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"contracts/decentralized_stablecoin/src/contract.rs","byte_start":12753,"byte_end":12759,"line_start":368,"line_end":368,"column_start":24,"column_end":30,"is_primary":true,"text":[{"text":"    match TOTAL_SUPPLY.update(deps.storage, |mut supply| -> StdResult<_> {","highlight_start":24,"highlight_end":30}],"label":"method cannot be called on `Item<'static, Supply>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":1253,"byte_end":1270,"line_start":32,"line_end":32,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"pub struct Supply {","highlight_start":1,"highlight_end":18}],"label":"doesn't satisfy `Supply: serde::de::Deserialize<'de>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":1253,"byte_end":1270,"line_start":32,"line_end":32,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"pub struct Supply {","highlight_start":1,"highlight_end":18}],"label":"doesn't satisfy `Supply: serde::de::DeserializeOwned`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":1253,"byte_end":1270,"line_start":32,"line_end":32,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"pub struct Supply {","highlight_start":1,"highlight_end":18}],"label":"doesn't satisfy `Supply: serde::ser::Serialize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`Supply: serde::ser::Serialize`\n`Supply: serde::de::DeserializeOwned`\n`Supply: serde::de::Deserialize<'de>`\nwhich is required by `Supply: serde::de::DeserializeOwned`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the traits `serde::de::Deserialize`, `serde::de::DeserializeOwned`,  and `serde::ser::Serialize` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs","byte_start":19706,"byte_end":19739,"line_start":535,"line_end":535,"column_start":1,"column_end":34,"is_primary":true,"text":[{"text":"pub trait Deserialize<'de>: Sized {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs","byte_start":22432,"byte_end":22485,"line_start":607,"line_end":607,"column_start":1,"column_end":54,"is_primary":true,"text":[{"text":"pub trait DeserializeOwned: for<'de> Deserialize<'de> {}","highlight_start":1,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/ser/mod.rs","byte_start":8041,"byte_end":8060,"line_start":218,"line_end":218,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub trait Serialize {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `update` exists for struct `Item<'static, Supply>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/contract.rs:368:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m368\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    match TOTAL_SUPPLY.update(deps.storage, |mut supply| -> StdResult<_> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `Item<'static, Supply>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/state.rs:32:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Supply {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Supply: serde::de::Deserialize<'de>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Supply: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Supply: serde::ser::Serialize`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `Supply: serde::ser::Serialize`\u001b[0m\n\u001b[0m            `Supply: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m            `Supply: serde::de::Deserialize<'de>`\u001b[0m\n\u001b[0m            which is required by `Supply: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the traits `serde::de::Deserialize`, `serde::de::DeserializeOwned`,  and `serde::ser::Serialize` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs:535:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m535\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Deserialize<'de>: Sized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m607\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait DeserializeOwned: for<'de> Deserialize<'de> {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/ser/mod.rs:218:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Serialize {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"the trait bound `InvestmentResponse: serde::ser::Serialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"contracts/decentralized_stablecoin/src/contract.rs","byte_start":14012,"byte_end":14036,"line_start":399,"line_end":399,"column_start":46,"column_end":70,"is_primary":true,"text":[{"text":"        QueryMsg::Investment {} => to_binary(&query_investment(deps)?),","highlight_start":46,"highlight_end":70}],"label":"the trait `serde::ser::Serialize` is not implemented for `InvestmentResponse`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/contract.rs","byte_start":14002,"byte_end":14011,"line_start":399,"line_end":399,"column_start":36,"column_end":45,"is_primary":false,"text":[{"text":"        QueryMsg::Investment {} => to_binary(&query_investment(deps)?),","highlight_start":36,"highlight_end":45}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `serde::ser::Serialize`:\n  &'a T\n  &'a mut T\n  ()\n  (T0, T1)\n  (T0, T1, T2)\n  (T0, T1, T2, T3)\n  (T0, T1, T2, T3, T4)\n  (T0, T1, T2, T3, T4, T5)\nand 278 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `to_binary`","code":null,"level":"note","spans":[{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.5.1/src/serde.rs","byte_start":1267,"byte_end":1276,"line_start":40,"line_end":40,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"    T: Serialize + ?Sized,","highlight_start":8,"highlight_end":17}],"label":"required by this bound in `to_binary`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `InvestmentResponse: serde::ser::Serialize` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/contract.rs:399:46\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m399\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        QueryMsg::Investment {} => to_binary(&query_investment(deps)?),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `serde::ser::Serialize` is not implemented for `InvestmentResponse`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `serde::ser::Serialize`:\u001b[0m\n\u001b[0m              &'a T\u001b[0m\n\u001b[0m              &'a mut T\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (T0, T1)\u001b[0m\n\u001b[0m              (T0, T1, T2)\u001b[0m\n\u001b[0m              (T0, T1, T2, T3)\u001b[0m\n\u001b[0m              (T0, T1, T2, T3, T4)\u001b[0m\n\u001b[0m              (T0, T1, T2, T3, T4, T5)\u001b[0m\n\u001b[0m            and 278 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `to_binary`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.5.1/src/serde.rs:40:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    T: Serialize + ?Sized,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `to_binary`\u001b[0m\n\n"}
{"message":"the method `load` exists for struct `Item<'static, InvestmentInfo>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"contracts/decentralized_stablecoin/src/contract.rs","byte_start":14463,"byte_end":14467,"line_start":410,"line_end":410,"column_start":29,"column_end":33,"is_primary":true,"text":[{"text":"    let invest = INVESTMENT.load(deps.storage)?;","highlight_start":29,"highlight_end":33}],"label":"method cannot be called on `Item<'static, InvestmentInfo>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":317,"byte_end":342,"line_start":11,"line_end":11,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"pub struct InvestmentInfo {","highlight_start":1,"highlight_end":26}],"label":"doesn't satisfy `InvestmentInfo: serde::de::Deserialize<'de>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":317,"byte_end":342,"line_start":11,"line_end":11,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"pub struct InvestmentInfo {","highlight_start":1,"highlight_end":26}],"label":"doesn't satisfy `InvestmentInfo: serde::de::DeserializeOwned`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":317,"byte_end":342,"line_start":11,"line_end":11,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"pub struct InvestmentInfo {","highlight_start":1,"highlight_end":26}],"label":"doesn't satisfy `InvestmentInfo: serde::ser::Serialize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`InvestmentInfo: serde::ser::Serialize`\n`InvestmentInfo: serde::de::DeserializeOwned`\n`InvestmentInfo: serde::de::Deserialize<'de>`\nwhich is required by `InvestmentInfo: serde::de::DeserializeOwned`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the traits `serde::de::Deserialize`, `serde::de::DeserializeOwned`,  and `serde::ser::Serialize` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs","byte_start":19706,"byte_end":19739,"line_start":535,"line_end":535,"column_start":1,"column_end":34,"is_primary":true,"text":[{"text":"pub trait Deserialize<'de>: Sized {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs","byte_start":22432,"byte_end":22485,"line_start":607,"line_end":607,"column_start":1,"column_end":54,"is_primary":true,"text":[{"text":"pub trait DeserializeOwned: for<'de> Deserialize<'de> {}","highlight_start":1,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/ser/mod.rs","byte_start":8041,"byte_end":8060,"line_start":218,"line_end":218,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub trait Serialize {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `load` exists for struct `Item<'static, InvestmentInfo>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/contract.rs:410:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m410\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let invest = INVESTMENT.load(deps.storage)?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `Item<'static, InvestmentInfo>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/state.rs:11:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct InvestmentInfo {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `InvestmentInfo: serde::de::Deserialize<'de>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `InvestmentInfo: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `InvestmentInfo: serde::ser::Serialize`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `InvestmentInfo: serde::ser::Serialize`\u001b[0m\n\u001b[0m            `InvestmentInfo: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m            `InvestmentInfo: serde::de::Deserialize<'de>`\u001b[0m\n\u001b[0m            which is required by `InvestmentInfo: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the traits `serde::de::Deserialize`, `serde::de::DeserializeOwned`,  and `serde::ser::Serialize` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs:535:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m535\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Deserialize<'de>: Sized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m607\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait DeserializeOwned: for<'de> Deserialize<'de> {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/ser/mod.rs:218:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Serialize {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"the method `load` exists for struct `Item<'static, Supply>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"contracts/decentralized_stablecoin/src/contract.rs","byte_start":14514,"byte_end":14518,"line_start":411,"line_end":411,"column_start":31,"column_end":35,"is_primary":true,"text":[{"text":"    let supply = TOTAL_SUPPLY.load(deps.storage)?;","highlight_start":31,"highlight_end":35}],"label":"method cannot be called on `Item<'static, Supply>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":1253,"byte_end":1270,"line_start":32,"line_end":32,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"pub struct Supply {","highlight_start":1,"highlight_end":18}],"label":"doesn't satisfy `Supply: serde::de::Deserialize<'de>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":1253,"byte_end":1270,"line_start":32,"line_end":32,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"pub struct Supply {","highlight_start":1,"highlight_end":18}],"label":"doesn't satisfy `Supply: serde::de::DeserializeOwned`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/decentralized_stablecoin/src/state.rs","byte_start":1253,"byte_end":1270,"line_start":32,"line_end":32,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"pub struct Supply {","highlight_start":1,"highlight_end":18}],"label":"doesn't satisfy `Supply: serde::ser::Serialize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`Supply: serde::ser::Serialize`\n`Supply: serde::de::DeserializeOwned`\n`Supply: serde::de::Deserialize<'de>`\nwhich is required by `Supply: serde::de::DeserializeOwned`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the traits `serde::de::Deserialize`, `serde::de::DeserializeOwned`,  and `serde::ser::Serialize` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs","byte_start":19706,"byte_end":19739,"line_start":535,"line_end":535,"column_start":1,"column_end":34,"is_primary":true,"text":[{"text":"pub trait Deserialize<'de>: Sized {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs","byte_start":22432,"byte_end":22485,"line_start":607,"line_end":607,"column_start":1,"column_end":54,"is_primary":true,"text":[{"text":"pub trait DeserializeOwned: for<'de> Deserialize<'de> {}","highlight_start":1,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/ser/mod.rs","byte_start":8041,"byte_end":8060,"line_start":218,"line_end":218,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub trait Serialize {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `load` exists for struct `Item<'static, Supply>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/contract.rs:411:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m411\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let supply = TOTAL_SUPPLY.load(deps.storage)?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `Item<'static, Supply>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0mcontracts/decentralized_stablecoin/src/state.rs:32:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Supply {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Supply: serde::de::Deserialize<'de>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Supply: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Supply: serde::ser::Serialize`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `Supply: serde::ser::Serialize`\u001b[0m\n\u001b[0m            `Supply: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m            `Supply: serde::de::Deserialize<'de>`\u001b[0m\n\u001b[0m            which is required by `Supply: serde::de::DeserializeOwned`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the traits `serde::de::Deserialize`, `serde::de::DeserializeOwned`,  and `serde::ser::Serialize` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs:535:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m535\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Deserialize<'de>: Sized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m607\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait DeserializeOwned: for<'de> Deserialize<'de> {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/ser/mod.rs:218:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Serialize {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"aborting due to 31 previous errors; 8 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 31 previous errors; 8 warnings emitted\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0277, E0432, E0599.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0277, E0432, E0599.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0277`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0277`.\u001b[0m\n"}
