{"message":"unresolved import `schemars`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"contracts/oracle/src/state.rs","byte_start":28,"byte_end":36,"line_start":2,"line_end":2,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"use schemars::JsonSchema;","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a similar path exists","code":null,"level":"help","spans":[{"file_name":"contracts/oracle/src/state.rs","byte_start":28,"byte_end":36,"line_start":2,"line_end":2,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"use schemars::JsonSchema;","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":"cosmwasm_schema::schemars","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `schemars`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/oracle/src/state.rs:2:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse schemars::JsonSchema;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a similar path exists: `cosmwasm_schema::schemars`\u001b[0m\n\n"}
{"message":"unresolved import `serde`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"contracts/oracle/src/state.rs","byte_start":54,"byte_end":59,"line_start":3,"line_end":3,"column_start":5,"column_end":10,"is_primary":true,"text":[{"text":"use serde::{Deserialize, Serialize};","highlight_start":5,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a similar path exists","code":null,"level":"help","spans":[{"file_name":"contracts/oracle/src/state.rs","byte_start":54,"byte_end":59,"line_start":3,"line_end":3,"column_start":5,"column_end":10,"is_primary":true,"text":[{"text":"use serde::{Deserialize, Serialize};","highlight_start":5,"highlight_end":10}],"label":null,"suggested_replacement":"cosmwasm_schema::serde","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `serde`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/oracle/src/state.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse serde::{Deserialize, Serialize};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a similar path exists: `cosmwasm_schema::serde`\u001b[0m\n\n"}
{"message":"cannot determine resolution for the derive macro `Serialize`","code":null,"level":"error","spans":[{"file_name":"contracts/oracle/src/state.rs","byte_start":159,"byte_end":168,"line_start":8,"line_end":8,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"#[derive(Serialize, Deserialize, Clone, Debug, PartialEq, JsonSchema)]","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"import resolution is stuck, try simplifying macro imports","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot determine resolution for the derive macro `Serialize`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/oracle/src/state.rs:8:10\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Serialize, Deserialize, Clone, Debug, PartialEq, JsonSchema)]\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: import resolution is stuck, try simplifying macro imports\u001b[0m\n\n"}
{"message":"cannot determine resolution for the derive macro `Deserialize`","code":null,"level":"error","spans":[{"file_name":"contracts/oracle/src/state.rs","byte_start":170,"byte_end":181,"line_start":8,"line_end":8,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"#[derive(Serialize, Deserialize, Clone, Debug, PartialEq, JsonSchema)]","highlight_start":21,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"import resolution is stuck, try simplifying macro imports","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot determine resolution for the derive macro `Deserialize`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/oracle/src/state.rs:8:21\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Serialize, Deserialize, Clone, Debug, PartialEq, JsonSchema)]\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: import resolution is stuck, try simplifying macro imports\u001b[0m\n\n"}
{"message":"cannot determine resolution for the derive macro `JsonSchema`","code":null,"level":"error","spans":[{"file_name":"contracts/oracle/src/state.rs","byte_start":208,"byte_end":218,"line_start":8,"line_end":8,"column_start":59,"column_end":69,"is_primary":true,"text":[{"text":"#[derive(Serialize, Deserialize, Clone, Debug, PartialEq, JsonSchema)]","highlight_start":59,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"import resolution is stuck, try simplifying macro imports","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot determine resolution for the derive macro `JsonSchema`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/oracle/src/state.rs:8:59\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Serialize, Deserialize, Clone, Debug, PartialEq, JsonSchema)]\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: import resolution is stuck, try simplifying macro imports\u001b[0m\n\n"}
{"message":"use of deprecated function `cosmwasm_std::to_binary`: use to_json_binary instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"contracts/oracle/src/contract.rs","byte_start":234,"byte_end":243,"line_start":9,"line_end":9,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"        to_binary, Binary, Coin, Deps, DepsMut, Env, MessageInfo, Response, StdError, StdResult,","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(deprecated)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `cosmwasm_std::to_binary`: use to_json_binary instead\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/oracle/src/contract.rs:9:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        to_binary, Binary, Coin, Deps, DepsMut, Env, MessageInfo, Response, StdError, StdResult,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(deprecated)]` on by default\u001b[0m\n\n"}
{"message":"use of deprecated function `cosmwasm_std::to_binary`: use to_json_binary instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"contracts/oracle/src/contract.rs","byte_start":2055,"byte_end":2064,"line_start":57,"line_end":57,"column_start":36,"column_end":45,"is_primary":true,"text":[{"text":"        QueryMsg::FetchPrice {} => to_binary(&query_fetch_price(deps, env)?),","highlight_start":36,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `cosmwasm_std::to_binary`: use to_json_binary instead\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/oracle/src/contract.rs:57:36\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        QueryMsg::FetchPrice {} => to_binary(&query_fetch_price(deps, env)?),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"message":"use of deprecated function `cosmwasm_std::to_binary`: use to_json_binary instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"contracts/oracle/src/contract.rs","byte_start":2143,"byte_end":2152,"line_start":58,"line_end":58,"column_start":46,"column_end":55,"is_primary":true,"text":[{"text":"        QueryMsg::FetchUpdateFee { vaas } => to_binary(&query_fetch_update_fee(deps, vaas)?),","highlight_start":46,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `cosmwasm_std::to_binary`: use to_json_binary instead\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/oracle/src/contract.rs:58:46\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        QueryMsg::FetchUpdateFee { vaas } => to_binary(&query_fetch_update_fee(deps, vaas)?),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"message":"use of deprecated function `cosmwasm_std::to_binary`: use to_json_binary instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"contracts/oracle/src/contract.rs","byte_start":2234,"byte_end":2243,"line_start":59,"line_end":59,"column_start":43,"column_end":52,"is_primary":true,"text":[{"text":"        QueryMsg::FetchValidTimePeriod => to_binary(&query_fetch_valid_time_period(deps)?),","highlight_start":43,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `cosmwasm_std::to_binary`: use to_json_binary instead\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/oracle/src/contract.rs:59:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        QueryMsg::FetchValidTimePeriod => to_binary(&query_fetch_valid_time_period(deps)?),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"message":"use of deprecated function `cosmwasm_std::from_binary`: use from_json instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"contracts/oracle/src/contract.rs","byte_start":4759,"byte_end":4770,"line_start":116,"line_end":116,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"            from_binary,","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `cosmwasm_std::from_binary`: use from_json instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/oracle/src/contract.rs:116:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            from_binary,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"use of deprecated function `cosmwasm_std::from_binary`: use from_json instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"contracts/oracle/src/contract.rs","byte_start":8447,"byte_end":8458,"line_start":211,"line_end":211,"column_start":32,"column_end":43,"is_primary":true,"text":[{"text":"            .and_then(|binary| from_binary::<FetchPriceResponse>(&binary));","highlight_start":32,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `cosmwasm_std::from_binary`: use from_json instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/oracle/src/contract.rs:211:32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m211\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .and_then(|binary| from_binary::<FetchPriceResponse>(&binary));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"use of deprecated function `cosmwasm_std::from_binary`: use from_json instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"contracts/oracle/src/contract.rs","byte_start":9079,"byte_end":9090,"line_start":226,"line_end":226,"column_start":62,"column_end":73,"is_primary":true,"text":[{"text":"            query(deps.as_ref(), env, msg).and_then(|binary| from_binary::<Duration>(&binary));","highlight_start":62,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `cosmwasm_std::from_binary`: use from_json instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/oracle/src/contract.rs:226:62\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m226\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            query(deps.as_ref(), env, msg).and_then(|binary| from_binary::<Duration>(&binary));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"use of deprecated function `cosmwasm_std::from_binary`: use from_json instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"contracts/oracle/src/contract.rs","byte_start":9721,"byte_end":9732,"line_start":242,"line_end":242,"column_start":71,"column_end":82,"is_primary":true,"text":[{"text":"        let result = query(deps.as_ref(), env, msg).and_then(|binary| from_binary::<Coin>(&binary));","highlight_start":71,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `cosmwasm_std::from_binary`: use from_json instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/oracle/src/contract.rs:242:71\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m242\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let result = query(deps.as_ref(), env, msg).and_then(|binary| from_binary::<Coin>(&binary));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"the method `save` exists for struct `Item<'static, State>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"contracts/oracle/src/contract.rs","byte_start":1393,"byte_end":1397,"line_start":36,"line_end":36,"column_start":11,"column_end":15,"is_primary":true,"text":[{"text":"    STATE.save(deps.storage, &state)?;","highlight_start":11,"highlight_end":15}],"label":"method cannot be called on `Item<'static, State>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/oracle/src/state.rs","byte_start":221,"byte_end":237,"line_start":9,"line_end":9,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"pub struct State {","highlight_start":1,"highlight_end":17}],"label":"doesn't satisfy `state::State: Deserialize<'de>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/oracle/src/state.rs","byte_start":221,"byte_end":237,"line_start":9,"line_end":9,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"pub struct State {","highlight_start":1,"highlight_end":17}],"label":"doesn't satisfy `state::State: DeserializeOwned`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/oracle/src/state.rs","byte_start":221,"byte_end":237,"line_start":9,"line_end":9,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"pub struct State {","highlight_start":1,"highlight_end":17}],"label":"doesn't satisfy `state::State: Serialize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`state::State: Serialize`\n`state::State: DeserializeOwned`\n`state::State: Deserialize<'de>`\nwhich is required by `state::State: DeserializeOwned`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the traits `Deserialize`, `DeserializeOwned`,  and `Serialize` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs","byte_start":19706,"byte_end":19739,"line_start":535,"line_end":535,"column_start":1,"column_end":34,"is_primary":true,"text":[{"text":"pub trait Deserialize<'de>: Sized {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs","byte_start":22432,"byte_end":22485,"line_start":607,"line_end":607,"column_start":1,"column_end":54,"is_primary":true,"text":[{"text":"pub trait DeserializeOwned: for<'de> Deserialize<'de> {}","highlight_start":1,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/ser/mod.rs","byte_start":8041,"byte_end":8060,"line_start":218,"line_end":218,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub trait Serialize {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `save` exists for struct `Item<'static, State>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/oracle/src/contract.rs:36:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    STATE.save(deps.storage, &state)?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `Item<'static, State>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0mcontracts/oracle/src/state.rs:9:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct State {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `state::State: Deserialize<'de>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `state::State: DeserializeOwned`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `state::State: Serialize`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `state::State: Serialize`\u001b[0m\n\u001b[0m            `state::State: DeserializeOwned`\u001b[0m\n\u001b[0m            `state::State: Deserialize<'de>`\u001b[0m\n\u001b[0m            which is required by `state::State: DeserializeOwned`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the traits `Deserialize`, `DeserializeOwned`,  and `Serialize` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs:535:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m535\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Deserialize<'de>: Sized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m607\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait DeserializeOwned: for<'de> Deserialize<'de> {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/ser/mod.rs:218:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Serialize {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"the method `load` exists for struct `Item<'static, State>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"contracts/oracle/src/contract.rs","byte_start":2393,"byte_end":2397,"line_start":64,"line_end":64,"column_start":23,"column_end":27,"is_primary":true,"text":[{"text":"    let state = STATE.load(deps.storage)?;","highlight_start":23,"highlight_end":27}],"label":"method cannot be called on `Item<'static, State>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/oracle/src/state.rs","byte_start":221,"byte_end":237,"line_start":9,"line_end":9,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"pub struct State {","highlight_start":1,"highlight_end":17}],"label":"doesn't satisfy `state::State: Deserialize<'de>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/oracle/src/state.rs","byte_start":221,"byte_end":237,"line_start":9,"line_end":9,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"pub struct State {","highlight_start":1,"highlight_end":17}],"label":"doesn't satisfy `state::State: DeserializeOwned`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/oracle/src/state.rs","byte_start":221,"byte_end":237,"line_start":9,"line_end":9,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"pub struct State {","highlight_start":1,"highlight_end":17}],"label":"doesn't satisfy `state::State: Serialize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`state::State: Serialize`\n`state::State: DeserializeOwned`\n`state::State: Deserialize<'de>`\nwhich is required by `state::State: DeserializeOwned`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the traits `Deserialize`, `DeserializeOwned`,  and `Serialize` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs","byte_start":19706,"byte_end":19739,"line_start":535,"line_end":535,"column_start":1,"column_end":34,"is_primary":true,"text":[{"text":"pub trait Deserialize<'de>: Sized {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs","byte_start":22432,"byte_end":22485,"line_start":607,"line_end":607,"column_start":1,"column_end":54,"is_primary":true,"text":[{"text":"pub trait DeserializeOwned: for<'de> Deserialize<'de> {}","highlight_start":1,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/ser/mod.rs","byte_start":8041,"byte_end":8060,"line_start":218,"line_end":218,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub trait Serialize {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `load` exists for struct `Item<'static, State>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/oracle/src/contract.rs:64:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let state = STATE.load(deps.storage)?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `Item<'static, State>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0mcontracts/oracle/src/state.rs:9:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct State {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `state::State: Deserialize<'de>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `state::State: DeserializeOwned`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `state::State: Serialize`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `state::State: Serialize`\u001b[0m\n\u001b[0m            `state::State: DeserializeOwned`\u001b[0m\n\u001b[0m            `state::State: Deserialize<'de>`\u001b[0m\n\u001b[0m            which is required by `state::State: DeserializeOwned`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the traits `Deserialize`, `DeserializeOwned`,  and `Serialize` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs:535:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m535\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Deserialize<'de>: Sized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m607\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait DeserializeOwned: for<'de> Deserialize<'de> {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/ser/mod.rs:218:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Serialize {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"the method `load` exists for struct `Item<'static, State>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"contracts/oracle/src/contract.rs","byte_start":4327,"byte_end":4331,"line_start":100,"line_end":100,"column_start":23,"column_end":27,"is_primary":true,"text":[{"text":"    let state = STATE.load(deps.storage)?;","highlight_start":23,"highlight_end":27}],"label":"method cannot be called on `Item<'static, State>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/oracle/src/state.rs","byte_start":221,"byte_end":237,"line_start":9,"line_end":9,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"pub struct State {","highlight_start":1,"highlight_end":17}],"label":"doesn't satisfy `state::State: Deserialize<'de>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/oracle/src/state.rs","byte_start":221,"byte_end":237,"line_start":9,"line_end":9,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"pub struct State {","highlight_start":1,"highlight_end":17}],"label":"doesn't satisfy `state::State: DeserializeOwned`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/oracle/src/state.rs","byte_start":221,"byte_end":237,"line_start":9,"line_end":9,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"pub struct State {","highlight_start":1,"highlight_end":17}],"label":"doesn't satisfy `state::State: Serialize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`state::State: Serialize`\n`state::State: DeserializeOwned`\n`state::State: Deserialize<'de>`\nwhich is required by `state::State: DeserializeOwned`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the traits `Deserialize`, `DeserializeOwned`,  and `Serialize` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs","byte_start":19706,"byte_end":19739,"line_start":535,"line_end":535,"column_start":1,"column_end":34,"is_primary":true,"text":[{"text":"pub trait Deserialize<'de>: Sized {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs","byte_start":22432,"byte_end":22485,"line_start":607,"line_end":607,"column_start":1,"column_end":54,"is_primary":true,"text":[{"text":"pub trait DeserializeOwned: for<'de> Deserialize<'de> {}","highlight_start":1,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/ser/mod.rs","byte_start":8041,"byte_end":8060,"line_start":218,"line_end":218,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub trait Serialize {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `load` exists for struct `Item<'static, State>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/oracle/src/contract.rs:100:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m100\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let state = STATE.load(deps.storage)?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `Item<'static, State>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0mcontracts/oracle/src/state.rs:9:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct State {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `state::State: Deserialize<'de>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `state::State: DeserializeOwned`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `state::State: Serialize`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `state::State: Serialize`\u001b[0m\n\u001b[0m            `state::State: DeserializeOwned`\u001b[0m\n\u001b[0m            `state::State: Deserialize<'de>`\u001b[0m\n\u001b[0m            which is required by `state::State: DeserializeOwned`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the traits `Deserialize`, `DeserializeOwned`,  and `Serialize` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs:535:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m535\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Deserialize<'de>: Sized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m607\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait DeserializeOwned: for<'de> Deserialize<'de> {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/ser/mod.rs:218:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Serialize {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"the method `load` exists for struct `Item<'static, State>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"contracts/oracle/src/contract.rs","byte_start":4546,"byte_end":4550,"line_start":106,"line_end":106,"column_start":23,"column_end":27,"is_primary":true,"text":[{"text":"    let state = STATE.load(deps.storage)?;","highlight_start":23,"highlight_end":27}],"label":"method cannot be called on `Item<'static, State>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/oracle/src/state.rs","byte_start":221,"byte_end":237,"line_start":9,"line_end":9,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"pub struct State {","highlight_start":1,"highlight_end":17}],"label":"doesn't satisfy `state::State: Deserialize<'de>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/oracle/src/state.rs","byte_start":221,"byte_end":237,"line_start":9,"line_end":9,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"pub struct State {","highlight_start":1,"highlight_end":17}],"label":"doesn't satisfy `state::State: DeserializeOwned`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/oracle/src/state.rs","byte_start":221,"byte_end":237,"line_start":9,"line_end":9,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"pub struct State {","highlight_start":1,"highlight_end":17}],"label":"doesn't satisfy `state::State: Serialize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`state::State: Serialize`\n`state::State: DeserializeOwned`\n`state::State: Deserialize<'de>`\nwhich is required by `state::State: DeserializeOwned`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the traits `Deserialize`, `DeserializeOwned`,  and `Serialize` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs","byte_start":19706,"byte_end":19739,"line_start":535,"line_end":535,"column_start":1,"column_end":34,"is_primary":true,"text":[{"text":"pub trait Deserialize<'de>: Sized {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs","byte_start":22432,"byte_end":22485,"line_start":607,"line_end":607,"column_start":1,"column_end":54,"is_primary":true,"text":[{"text":"pub trait DeserializeOwned: for<'de> Deserialize<'de> {}","highlight_start":1,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/ser/mod.rs","byte_start":8041,"byte_end":8060,"line_start":218,"line_end":218,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub trait Serialize {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `load` exists for struct `Item<'static, State>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/oracle/src/contract.rs:106:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let state = STATE.load(deps.storage)?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `Item<'static, State>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0mcontracts/oracle/src/state.rs:9:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct State {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `state::State: Deserialize<'de>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `state::State: DeserializeOwned`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `state::State: Serialize`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `state::State: Serialize`\u001b[0m\n\u001b[0m            `state::State: DeserializeOwned`\u001b[0m\n\u001b[0m            `state::State: Deserialize<'de>`\u001b[0m\n\u001b[0m            which is required by `state::State: DeserializeOwned`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the traits `Deserialize`, `DeserializeOwned`,  and `Serialize` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs:535:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m535\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Deserialize<'de>: Sized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m607\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait DeserializeOwned: for<'de> Deserialize<'de> {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/ser/mod.rs:218:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Serialize {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"the method `save` exists for struct `Item<'static, State>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"contracts/oracle/src/contract.rs","byte_start":6177,"byte_end":6181,"line_start":149,"line_end":149,"column_start":15,"column_end":19,"is_primary":true,"text":[{"text":"        STATE.save(dependencies.as_mut().storage, state).unwrap();","highlight_start":15,"highlight_end":19}],"label":"method cannot be called on `Item<'static, State>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/oracle/src/state.rs","byte_start":221,"byte_end":237,"line_start":9,"line_end":9,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"pub struct State {","highlight_start":1,"highlight_end":17}],"label":"doesn't satisfy `state::State: Deserialize<'de>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/oracle/src/state.rs","byte_start":221,"byte_end":237,"line_start":9,"line_end":9,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"pub struct State {","highlight_start":1,"highlight_end":17}],"label":"doesn't satisfy `state::State: DeserializeOwned`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/oracle/src/state.rs","byte_start":221,"byte_end":237,"line_start":9,"line_end":9,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"pub struct State {","highlight_start":1,"highlight_end":17}],"label":"doesn't satisfy `state::State: Serialize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`state::State: Serialize`\n`state::State: DeserializeOwned`\n`state::State: Deserialize<'de>`\nwhich is required by `state::State: DeserializeOwned`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the traits `Deserialize`, `DeserializeOwned`,  and `Serialize` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs","byte_start":19706,"byte_end":19739,"line_start":535,"line_end":535,"column_start":1,"column_end":34,"is_primary":true,"text":[{"text":"pub trait Deserialize<'de>: Sized {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs","byte_start":22432,"byte_end":22485,"line_start":607,"line_end":607,"column_start":1,"column_end":54,"is_primary":true,"text":[{"text":"pub trait DeserializeOwned: for<'de> Deserialize<'de> {}","highlight_start":1,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/ser/mod.rs","byte_start":8041,"byte_end":8060,"line_start":218,"line_end":218,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub trait Serialize {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `save` exists for struct `Item<'static, State>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/oracle/src/contract.rs:149:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m149\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        STATE.save(dependencies.as_mut().storage, state).unwrap();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `Item<'static, State>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0mcontracts/oracle/src/state.rs:9:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct State {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `state::State: Deserialize<'de>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `state::State: DeserializeOwned`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `state::State: Serialize`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `state::State: Serialize`\u001b[0m\n\u001b[0m            `state::State: DeserializeOwned`\u001b[0m\n\u001b[0m            `state::State: Deserialize<'de>`\u001b[0m\n\u001b[0m            which is required by `state::State: DeserializeOwned`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the traits `Deserialize`, `DeserializeOwned`,  and `Serialize` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/de/mod.rs:535:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m535\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Deserialize<'de>: Sized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m607\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait DeserializeOwned: for<'de> Deserialize<'de> {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/andreferreira/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.195/src/ser/mod.rs:218:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Serialize {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"aborting due to 10 previous errors; 8 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 10 previous errors; 8 warnings emitted\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0432, E0599.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0432, E0599.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0432`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0432`.\u001b[0m\n"}
